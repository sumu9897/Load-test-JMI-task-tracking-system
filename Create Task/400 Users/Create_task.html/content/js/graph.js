/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 128.0, "minX": 0.0, "maxY": 11778.0, "series": [{"data": [[0.0, 128.0], [0.1, 128.0], [0.2, 128.0], [0.3, 173.0], [0.4, 173.0], [0.5, 182.0], [0.6, 182.0], [0.7, 182.0], [0.8, 193.0], [0.9, 193.0], [1.0, 236.0], [1.1, 236.0], [1.2, 236.0], [1.3, 290.0], [1.4, 290.0], [1.5, 544.0], [1.6, 544.0], [1.7, 544.0], [1.8, 624.0], [1.9, 624.0], [2.0, 637.0], [2.1, 637.0], [2.2, 637.0], [2.3, 755.0], [2.4, 755.0], [2.5, 771.0], [2.6, 771.0], [2.7, 771.0], [2.8, 787.0], [2.9, 787.0], [3.0, 1088.0], [3.1, 1088.0], [3.2, 1088.0], [3.3, 1178.0], [3.4, 1178.0], [3.5, 1215.0], [3.6, 1215.0], [3.7, 1215.0], [3.8, 1295.0], [3.9, 1295.0], [4.0, 1330.0], [4.1, 1330.0], [4.2, 1330.0], [4.3, 1378.0], [4.4, 1378.0], [4.5, 1500.0], [4.6, 1500.0], [4.7, 1500.0], [4.8, 1536.0], [4.9, 1536.0], [5.0, 1655.0], [5.1, 1655.0], [5.2, 1655.0], [5.3, 1660.0], [5.4, 1660.0], [5.5, 1665.0], [5.6, 1665.0], [5.7, 1665.0], [5.8, 1670.0], [5.9, 1670.0], [6.0, 1780.0], [6.1, 1780.0], [6.2, 1780.0], [6.3, 1807.0], [6.4, 1807.0], [6.5, 1923.0], [6.6, 1923.0], [6.7, 1923.0], [6.8, 1924.0], [6.9, 1924.0], [7.0, 1960.0], [7.1, 1960.0], [7.2, 1960.0], [7.3, 2033.0], [7.4, 2033.0], [7.5, 2111.0], [7.6, 2111.0], [7.7, 2111.0], [7.8, 2119.0], [7.9, 2119.0], [8.0, 2188.0], [8.1, 2188.0], [8.2, 2188.0], [8.3, 2275.0], [8.4, 2275.0], [8.5, 2283.0], [8.6, 2283.0], [8.7, 2283.0], [8.8, 2291.0], [8.9, 2291.0], [9.0, 2298.0], [9.1, 2298.0], [9.2, 2298.0], [9.3, 2452.0], [9.4, 2452.0], [9.5, 2486.0], [9.6, 2486.0], [9.7, 2486.0], [9.8, 2512.0], [9.9, 2512.0], [10.0, 2519.0], [10.1, 2519.0], [10.2, 2519.0], [10.3, 2538.0], [10.4, 2538.0], [10.5, 2583.0], [10.6, 2583.0], [10.7, 2583.0], [10.8, 2620.0], [10.9, 2620.0], [11.0, 2656.0], [11.1, 2656.0], [11.2, 2656.0], [11.3, 2679.0], [11.4, 2679.0], [11.5, 2745.0], [11.6, 2745.0], [11.7, 2745.0], [11.8, 2783.0], [11.9, 2783.0], [12.0, 2857.0], [12.1, 2857.0], [12.2, 2857.0], [12.3, 2873.0], [12.4, 2873.0], [12.5, 2921.0], [12.6, 2921.0], [12.7, 2921.0], [12.8, 2956.0], [12.9, 2956.0], [13.0, 3023.0], [13.1, 3023.0], [13.2, 3023.0], [13.3, 3030.0], [13.4, 3030.0], [13.5, 3043.0], [13.6, 3043.0], [13.7, 3043.0], [13.8, 3101.0], [13.9, 3101.0], [14.0, 3174.0], [14.1, 3174.0], [14.2, 3174.0], [14.3, 3177.0], [14.4, 3177.0], [14.5, 3180.0], [14.6, 3180.0], [14.7, 3180.0], [14.8, 3201.0], [14.9, 3201.0], [15.0, 3212.0], [15.1, 3212.0], [15.2, 3212.0], [15.3, 3301.0], [15.4, 3301.0], [15.5, 3328.0], [15.6, 3328.0], [15.7, 3328.0], [15.8, 3332.0], [15.9, 3332.0], [16.0, 3334.0], [16.1, 3334.0], [16.2, 3334.0], [16.3, 3345.0], [16.4, 3345.0], [16.5, 3489.0], [16.6, 3489.0], [16.7, 3489.0], [16.8, 3518.0], [16.9, 3518.0], [17.0, 3590.0], [17.1, 3590.0], [17.2, 3590.0], [17.3, 3623.0], [17.4, 3623.0], [17.5, 3624.0], [17.6, 3624.0], [17.7, 3624.0], [17.8, 3631.0], [17.9, 3631.0], [18.0, 3635.0], [18.1, 3635.0], [18.2, 3635.0], [18.3, 3646.0], [18.4, 3646.0], [18.5, 3658.0], [18.6, 3658.0], [18.7, 3658.0], [18.8, 3660.0], [18.9, 3660.0], [19.0, 3665.0], [19.1, 3665.0], [19.2, 3665.0], [19.3, 3682.0], [19.4, 3682.0], [19.5, 3698.0], [19.6, 3698.0], [19.7, 3698.0], [19.8, 3724.0], [19.9, 3724.0], [20.0, 3766.0], [20.1, 3766.0], [20.2, 3766.0], [20.3, 3772.0], [20.4, 3772.0], [20.5, 3776.0], [20.6, 3776.0], [20.7, 3776.0], [20.8, 3784.0], [20.9, 3784.0], [21.0, 3794.0], [21.1, 3794.0], [21.2, 3794.0], [21.3, 3837.0], [21.4, 3837.0], [21.5, 3838.0], [21.6, 3838.0], [21.7, 3838.0], [21.8, 3844.0], [21.9, 3844.0], [22.0, 3865.0], [22.1, 3865.0], [22.2, 3865.0], [22.3, 3866.0], [22.4, 3866.0], [22.5, 3872.0], [22.6, 3872.0], [22.7, 3872.0], [22.8, 3969.0], [22.9, 3969.0], [23.0, 4029.0], [23.1, 4029.0], [23.2, 4029.0], [23.3, 4046.0], [23.4, 4046.0], [23.5, 4114.0], [23.6, 4114.0], [23.7, 4114.0], [23.8, 4175.0], [23.9, 4175.0], [24.0, 4189.0], [24.1, 4189.0], [24.2, 4189.0], [24.3, 4204.0], [24.4, 4204.0], [24.5, 4211.0], [24.6, 4211.0], [24.7, 4211.0], [24.8, 4219.0], [24.9, 4219.0], [25.0, 4219.0], [25.1, 4219.0], [25.2, 4219.0], [25.3, 4256.0], [25.4, 4256.0], [25.5, 4274.0], [25.6, 4274.0], [25.7, 4274.0], [25.8, 4275.0], [25.9, 4275.0], [26.0, 4279.0], [26.1, 4279.0], [26.2, 4279.0], [26.3, 4304.0], [26.4, 4304.0], [26.5, 4304.0], [26.6, 4304.0], [26.7, 4304.0], [26.8, 4316.0], [26.9, 4316.0], [27.0, 4316.0], [27.1, 4316.0], [27.2, 4316.0], [27.3, 4331.0], [27.4, 4331.0], [27.5, 4331.0], [27.6, 4331.0], [27.7, 4331.0], [27.8, 4344.0], [27.9, 4344.0], [28.0, 4347.0], [28.1, 4347.0], [28.2, 4347.0], [28.3, 4349.0], [28.4, 4349.0], [28.5, 4357.0], [28.6, 4357.0], [28.7, 4357.0], [28.8, 4370.0], [28.9, 4370.0], [29.0, 4383.0], [29.1, 4383.0], [29.2, 4383.0], [29.3, 4384.0], [29.4, 4384.0], [29.5, 4384.0], [29.6, 4384.0], [29.7, 4384.0], [29.8, 4395.0], [29.9, 4395.0], [30.0, 4409.0], [30.1, 4409.0], [30.2, 4409.0], [30.3, 4416.0], [30.4, 4416.0], [30.5, 4454.0], [30.6, 4454.0], [30.7, 4454.0], [30.8, 4486.0], [30.9, 4486.0], [31.0, 4487.0], [31.1, 4487.0], [31.2, 4487.0], [31.3, 4518.0], [31.4, 4518.0], [31.5, 4634.0], [31.6, 4634.0], [31.7, 4634.0], [31.8, 4658.0], [31.9, 4658.0], [32.0, 4677.0], [32.1, 4677.0], [32.2, 4677.0], [32.3, 4682.0], [32.4, 4682.0], [32.5, 4682.0], [32.6, 4682.0], [32.7, 4682.0], [32.8, 4682.0], [32.9, 4682.0], [33.0, 4692.0], [33.1, 4692.0], [33.2, 4692.0], [33.3, 4695.0], [33.4, 4695.0], [33.5, 4698.0], [33.6, 4698.0], [33.7, 4698.0], [33.8, 4701.0], [33.9, 4701.0], [34.0, 4701.0], [34.1, 4701.0], [34.2, 4701.0], [34.3, 4733.0], [34.4, 4733.0], [34.5, 4762.0], [34.6, 4762.0], [34.7, 4762.0], [34.8, 4765.0], [34.9, 4765.0], [35.0, 4780.0], [35.1, 4780.0], [35.2, 4780.0], [35.3, 4795.0], [35.4, 4795.0], [35.5, 4797.0], [35.6, 4797.0], [35.7, 4797.0], [35.8, 4798.0], [35.9, 4798.0], [36.0, 4798.0], [36.1, 4798.0], [36.2, 4798.0], [36.3, 4800.0], [36.4, 4800.0], [36.5, 4802.0], [36.6, 4802.0], [36.7, 4802.0], [36.8, 4804.0], [36.9, 4804.0], [37.0, 4805.0], [37.1, 4805.0], [37.2, 4805.0], [37.3, 4805.0], [37.4, 4805.0], [37.5, 4808.0], [37.6, 4808.0], [37.7, 4808.0], [37.8, 4809.0], [37.9, 4809.0], [38.0, 4811.0], [38.1, 4811.0], [38.2, 4811.0], [38.3, 4838.0], [38.4, 4838.0], [38.5, 4880.0], [38.6, 4880.0], [38.7, 4880.0], [38.8, 4882.0], [38.9, 4882.0], [39.0, 4900.0], [39.1, 4900.0], [39.2, 4900.0], [39.3, 4900.0], [39.4, 4900.0], [39.5, 4977.0], [39.6, 4977.0], [39.7, 4977.0], [39.8, 4994.0], [39.9, 4994.0], [40.0, 5185.0], [40.1, 5185.0], [40.2, 5185.0], [40.3, 5193.0], [40.4, 5193.0], [40.5, 5225.0], [40.6, 5225.0], [40.7, 5225.0], [40.8, 5239.0], [40.9, 5239.0], [41.0, 5277.0], [41.1, 5277.0], [41.2, 5277.0], [41.3, 5293.0], [41.4, 5293.0], [41.5, 5384.0], [41.6, 5384.0], [41.7, 5384.0], [41.8, 5387.0], [41.9, 5387.0], [42.0, 5424.0], [42.1, 5424.0], [42.2, 5424.0], [42.3, 5432.0], [42.4, 5432.0], [42.5, 5438.0], [42.6, 5438.0], [42.7, 5438.0], [42.8, 5439.0], [42.9, 5439.0], [43.0, 5450.0], [43.1, 5450.0], [43.2, 5450.0], [43.3, 5456.0], [43.4, 5456.0], [43.5, 5497.0], [43.6, 5497.0], [43.7, 5497.0], [43.8, 5501.0], [43.9, 5501.0], [44.0, 5510.0], [44.1, 5510.0], [44.2, 5510.0], [44.3, 5536.0], [44.4, 5536.0], [44.5, 5541.0], [44.6, 5541.0], [44.7, 5541.0], [44.8, 5586.0], [44.9, 5586.0], [45.0, 5609.0], [45.1, 5609.0], [45.2, 5609.0], [45.3, 5613.0], [45.4, 5613.0], [45.5, 5618.0], [45.6, 5618.0], [45.7, 5618.0], [45.8, 5664.0], [45.9, 5664.0], [46.0, 5676.0], [46.1, 5676.0], [46.2, 5676.0], [46.3, 5684.0], [46.4, 5684.0], [46.5, 5684.0], [46.6, 5684.0], [46.7, 5684.0], [46.8, 5716.0], [46.9, 5716.0], [47.0, 5742.0], [47.1, 5742.0], [47.2, 5742.0], [47.3, 5743.0], [47.4, 5743.0], [47.5, 5748.0], [47.6, 5748.0], [47.7, 5748.0], [47.8, 5770.0], [47.9, 5770.0], [48.0, 5777.0], [48.1, 5777.0], [48.2, 5777.0], [48.3, 5779.0], [48.4, 5779.0], [48.5, 5804.0], [48.6, 5804.0], [48.7, 5804.0], [48.8, 5808.0], [48.9, 5808.0], [49.0, 5839.0], [49.1, 5839.0], [49.2, 5839.0], [49.3, 5859.0], [49.4, 5859.0], [49.5, 5867.0], [49.6, 5867.0], [49.7, 5867.0], [49.8, 5873.0], [49.9, 5873.0], [50.0, 5875.0], [50.1, 5875.0], [50.2, 5875.0], [50.3, 5896.0], [50.4, 5896.0], [50.5, 5904.0], [50.6, 5904.0], [50.7, 5904.0], [50.8, 5904.0], [50.9, 5904.0], [51.0, 5904.0], [51.1, 5904.0], [51.2, 5904.0], [51.3, 5904.0], [51.4, 5904.0], [51.5, 5912.0], [51.6, 5912.0], [51.7, 5912.0], [51.8, 5914.0], [51.9, 5914.0], [52.0, 5922.0], [52.1, 5922.0], [52.2, 5922.0], [52.3, 5929.0], [52.4, 5929.0], [52.5, 5942.0], [52.6, 5942.0], [52.7, 5942.0], [52.8, 5974.0], [52.9, 5974.0], [53.0, 6011.0], [53.1, 6011.0], [53.2, 6011.0], [53.3, 6011.0], [53.4, 6011.0], [53.5, 6019.0], [53.6, 6019.0], [53.7, 6019.0], [53.8, 6020.0], [53.9, 6020.0], [54.0, 6027.0], [54.1, 6027.0], [54.2, 6027.0], [54.3, 6037.0], [54.4, 6037.0], [54.5, 6090.0], [54.6, 6090.0], [54.7, 6090.0], [54.8, 6096.0], [54.9, 6096.0], [55.0, 6102.0], [55.1, 6102.0], [55.2, 6102.0], [55.3, 6108.0], [55.4, 6108.0], [55.5, 6119.0], [55.6, 6119.0], [55.7, 6119.0], [55.8, 6145.0], [55.9, 6145.0], [56.0, 6192.0], [56.1, 6192.0], [56.2, 6192.0], [56.3, 6238.0], [56.4, 6238.0], [56.5, 6238.0], [56.6, 6238.0], [56.7, 6238.0], [56.8, 6244.0], [56.9, 6244.0], [57.0, 6271.0], [57.1, 6271.0], [57.2, 6271.0], [57.3, 6277.0], [57.4, 6277.0], [57.5, 6433.0], [57.6, 6433.0], [57.7, 6433.0], [57.8, 6469.0], [57.9, 6469.0], [58.0, 6509.0], [58.1, 6509.0], [58.2, 6509.0], [58.3, 6560.0], [58.4, 6560.0], [58.5, 6657.0], [58.6, 6657.0], [58.7, 6657.0], [58.8, 6661.0], [58.9, 6661.0], [59.0, 6662.0], [59.1, 6662.0], [59.2, 6662.0], [59.3, 6666.0], [59.4, 6666.0], [59.5, 6677.0], [59.6, 6677.0], [59.7, 6677.0], [59.8, 6680.0], [59.9, 6680.0], [60.0, 6687.0], [60.1, 6687.0], [60.2, 6687.0], [60.3, 6695.0], [60.4, 6695.0], [60.5, 6696.0], [60.6, 6696.0], [60.7, 6696.0], [60.8, 6699.0], [60.9, 6699.0], [61.0, 6716.0], [61.1, 6716.0], [61.2, 6716.0], [61.3, 6721.0], [61.4, 6721.0], [61.5, 6722.0], [61.6, 6722.0], [61.7, 6722.0], [61.8, 6728.0], [61.9, 6728.0], [62.0, 6729.0], [62.1, 6729.0], [62.2, 6729.0], [62.3, 6733.0], [62.4, 6733.0], [62.5, 6733.0], [62.6, 6733.0], [62.7, 6733.0], [62.8, 6740.0], [62.9, 6740.0], [63.0, 6741.0], [63.1, 6741.0], [63.2, 6741.0], [63.3, 6745.0], [63.4, 6745.0], [63.5, 6758.0], [63.6, 6758.0], [63.7, 6758.0], [63.8, 6775.0], [63.9, 6775.0], [64.0, 6782.0], [64.1, 6782.0], [64.2, 6782.0], [64.3, 6830.0], [64.4, 6830.0], [64.5, 6833.0], [64.6, 6833.0], [64.7, 6833.0], [64.8, 6833.0], [64.9, 6833.0], [65.0, 6850.0], [65.1, 6850.0], [65.2, 6850.0], [65.3, 6851.0], [65.4, 6851.0], [65.5, 6902.0], [65.6, 6902.0], [65.7, 6902.0], [65.8, 6956.0], [65.9, 6956.0], [66.0, 6957.0], [66.1, 6957.0], [66.2, 6957.0], [66.3, 7001.0], [66.4, 7001.0], [66.5, 7016.0], [66.6, 7016.0], [66.7, 7016.0], [66.8, 7018.0], [66.9, 7018.0], [67.0, 7031.0], [67.1, 7031.0], [67.2, 7031.0], [67.3, 7059.0], [67.4, 7059.0], [67.5, 7079.0], [67.6, 7079.0], [67.7, 7079.0], [67.8, 7117.0], [67.9, 7117.0], [68.0, 7118.0], [68.1, 7118.0], [68.2, 7118.0], [68.3, 7121.0], [68.4, 7121.0], [68.5, 7130.0], [68.6, 7130.0], [68.7, 7130.0], [68.8, 7137.0], [68.9, 7137.0], [69.0, 7138.0], [69.1, 7138.0], [69.2, 7138.0], [69.3, 7145.0], [69.4, 7145.0], [69.5, 7149.0], [69.6, 7149.0], [69.7, 7149.0], [69.8, 7167.0], [69.9, 7167.0], [70.0, 7235.0], [70.1, 7235.0], [70.2, 7235.0], [70.3, 7241.0], [70.4, 7241.0], [70.5, 7269.0], [70.6, 7269.0], [70.7, 7269.0], [70.8, 7282.0], [70.9, 7282.0], [71.0, 7291.0], [71.1, 7291.0], [71.2, 7291.0], [71.3, 7316.0], [71.4, 7316.0], [71.5, 7317.0], [71.6, 7317.0], [71.7, 7317.0], [71.8, 7319.0], [71.9, 7319.0], [72.0, 7346.0], [72.1, 7346.0], [72.2, 7346.0], [72.3, 7358.0], [72.4, 7358.0], [72.5, 7372.0], [72.6, 7372.0], [72.7, 7372.0], [72.8, 7377.0], [72.9, 7377.0], [73.0, 7392.0], [73.1, 7392.0], [73.2, 7392.0], [73.3, 7488.0], [73.4, 7488.0], [73.5, 7528.0], [73.6, 7528.0], [73.7, 7528.0], [73.8, 7547.0], [73.9, 7547.0], [74.0, 7556.0], [74.1, 7556.0], [74.2, 7556.0], [74.3, 7569.0], [74.4, 7569.0], [74.5, 7571.0], [74.6, 7571.0], [74.7, 7571.0], [74.8, 7578.0], [74.9, 7578.0], [75.0, 7593.0], [75.1, 7593.0], [75.2, 7593.0], [75.3, 7602.0], [75.4, 7602.0], [75.5, 7603.0], [75.6, 7603.0], [75.7, 7603.0], [75.8, 7614.0], [75.9, 7614.0], [76.0, 7642.0], [76.1, 7642.0], [76.2, 7642.0], [76.3, 7697.0], [76.4, 7697.0], [76.5, 7837.0], [76.6, 7837.0], [76.7, 7837.0], [76.8, 7881.0], [76.9, 7881.0], [77.0, 7902.0], [77.1, 7902.0], [77.2, 7902.0], [77.3, 7931.0], [77.4, 7931.0], [77.5, 7934.0], [77.6, 7934.0], [77.7, 7934.0], [77.8, 7945.0], [77.9, 7945.0], [78.0, 8144.0], [78.1, 8144.0], [78.2, 8144.0], [78.3, 8189.0], [78.4, 8189.0], [78.5, 8230.0], [78.6, 8230.0], [78.7, 8230.0], [78.8, 8255.0], [78.9, 8255.0], [79.0, 8257.0], [79.1, 8257.0], [79.2, 8257.0], [79.3, 8313.0], [79.4, 8313.0], [79.5, 8341.0], [79.6, 8341.0], [79.7, 8341.0], [79.8, 8411.0], [79.9, 8411.0], [80.0, 8456.0], [80.1, 8456.0], [80.2, 8456.0], [80.3, 8558.0], [80.4, 8558.0], [80.5, 8576.0], [80.6, 8576.0], [80.7, 8576.0], [80.8, 8579.0], [80.9, 8579.0], [81.0, 8598.0], [81.1, 8598.0], [81.2, 8598.0], [81.3, 8601.0], [81.4, 8601.0], [81.5, 8609.0], [81.6, 8609.0], [81.7, 8609.0], [81.8, 8616.0], [81.9, 8616.0], [82.0, 8619.0], [82.1, 8619.0], [82.2, 8619.0], [82.3, 8620.0], [82.4, 8620.0], [82.5, 8620.0], [82.6, 8620.0], [82.7, 8620.0], [82.8, 8635.0], [82.9, 8635.0], [83.0, 8645.0], [83.1, 8645.0], [83.2, 8645.0], [83.3, 8734.0], [83.4, 8734.0], [83.5, 8734.0], [83.6, 8734.0], [83.7, 8734.0], [83.8, 8735.0], [83.9, 8735.0], [84.0, 8738.0], [84.1, 8738.0], [84.2, 8738.0], [84.3, 8744.0], [84.4, 8744.0], [84.5, 8747.0], [84.6, 8747.0], [84.7, 8747.0], [84.8, 8748.0], [84.9, 8748.0], [85.0, 8748.0], [85.1, 8748.0], [85.2, 8748.0], [85.3, 8749.0], [85.4, 8749.0], [85.5, 8752.0], [85.6, 8752.0], [85.7, 8752.0], [85.8, 8755.0], [85.9, 8755.0], [86.0, 8761.0], [86.1, 8761.0], [86.2, 8761.0], [86.3, 8761.0], [86.4, 8761.0], [86.5, 8765.0], [86.6, 8765.0], [86.7, 8765.0], [86.8, 8766.0], [86.9, 8766.0], [87.0, 8768.0], [87.1, 8768.0], [87.2, 8768.0], [87.3, 8772.0], [87.4, 8772.0], [87.5, 8773.0], [87.6, 8773.0], [87.7, 8773.0], [87.8, 8779.0], [87.9, 8779.0], [88.0, 8782.0], [88.1, 8782.0], [88.2, 8782.0], [88.3, 8786.0], [88.4, 8786.0], [88.5, 8796.0], [88.6, 8796.0], [88.7, 8796.0], [88.8, 8797.0], [88.9, 8797.0], [89.0, 8801.0], [89.1, 8801.0], [89.2, 8801.0], [89.3, 8804.0], [89.4, 8804.0], [89.5, 8806.0], [89.6, 8806.0], [89.7, 8806.0], [89.8, 8807.0], [89.9, 8807.0], [90.0, 8825.0], [90.1, 8825.0], [90.2, 8825.0], [90.3, 8825.0], [90.4, 8825.0], [90.5, 8827.0], [90.6, 8827.0], [90.7, 8827.0], [90.8, 8829.0], [90.9, 8829.0], [91.0, 8830.0], [91.1, 8830.0], [91.2, 8830.0], [91.3, 8832.0], [91.4, 8832.0], [91.5, 8834.0], [91.6, 8834.0], [91.7, 8834.0], [91.8, 8844.0], [91.9, 8844.0], [92.0, 8849.0], [92.1, 8849.0], [92.2, 8849.0], [92.3, 8859.0], [92.4, 8859.0], [92.5, 8869.0], [92.6, 8869.0], [92.7, 8869.0], [92.8, 8873.0], [92.9, 8873.0], [93.0, 8894.0], [93.1, 8894.0], [93.2, 8894.0], [93.3, 8966.0], [93.4, 8966.0], [93.5, 8989.0], [93.6, 8989.0], [93.7, 8989.0], [93.8, 9006.0], [93.9, 9006.0], [94.0, 9008.0], [94.1, 9008.0], [94.2, 9008.0], [94.3, 9041.0], [94.4, 9041.0], [94.5, 9048.0], [94.6, 9048.0], [94.7, 9048.0], [94.8, 9052.0], [94.9, 9052.0], [95.0, 9118.0], [95.1, 9118.0], [95.2, 9118.0], [95.3, 9167.0], [95.4, 9167.0], [95.5, 9171.0], [95.6, 9171.0], [95.7, 9171.0], [95.8, 9277.0], [95.9, 9277.0], [96.0, 9280.0], [96.1, 9280.0], [96.2, 9280.0], [96.3, 9283.0], [96.4, 9283.0], [96.5, 9291.0], [96.6, 9291.0], [96.7, 9291.0], [96.8, 9352.0], [96.9, 9352.0], [97.0, 9353.0], [97.1, 9353.0], [97.2, 9353.0], [97.3, 9353.0], [97.4, 9353.0], [97.5, 9357.0], [97.6, 9357.0], [97.7, 9357.0], [97.8, 9357.0], [97.9, 9357.0], [98.0, 9359.0], [98.1, 9359.0], [98.2, 9359.0], [98.3, 9360.0], [98.4, 9360.0], [98.5, 9363.0], [98.6, 9363.0], [98.7, 9363.0], [98.8, 9374.0], [98.9, 9374.0], [99.0, 9396.0], [99.1, 9396.0], [99.2, 9396.0], [99.3, 9418.0], [99.4, 9418.0], [99.5, 9425.0], [99.6, 9425.0], [99.7, 9425.0], [99.8, 9429.0], [99.9, 9429.0]], "isOverall": false, "label": "Create Task-0", "isController": false}, {"data": [[0.0, 163.0], [0.1, 163.0], [0.2, 163.0], [0.3, 164.0], [0.4, 164.0], [0.5, 164.0], [0.6, 164.0], [0.7, 164.0], [0.8, 164.0], [0.9, 164.0], [1.0, 164.0], [1.1, 164.0], [1.2, 164.0], [1.3, 168.0], [1.4, 168.0], [1.5, 169.0], [1.6, 169.0], [1.7, 169.0], [1.8, 169.0], [1.9, 169.0], [2.0, 173.0], [2.1, 173.0], [2.2, 173.0], [2.3, 175.0], [2.4, 175.0], [2.5, 178.0], [2.6, 178.0], [2.7, 178.0], [2.8, 179.0], [2.9, 179.0], [3.0, 180.0], [3.1, 180.0], [3.2, 180.0], [3.3, 183.0], [3.4, 183.0], [3.5, 185.0], [3.6, 185.0], [3.7, 185.0], [3.8, 186.0], [3.9, 186.0], [4.0, 189.0], [4.1, 189.0], [4.2, 189.0], [4.3, 189.0], [4.4, 189.0], [4.5, 192.0], [4.6, 192.0], [4.7, 192.0], [4.8, 194.0], [4.9, 194.0], [5.0, 195.0], [5.1, 195.0], [5.2, 195.0], [5.3, 197.0], [5.4, 197.0], [5.5, 198.0], [5.6, 198.0], [5.7, 198.0], [5.8, 199.0], [5.9, 199.0], [6.0, 200.0], [6.1, 200.0], [6.2, 200.0], [6.3, 200.0], [6.4, 200.0], [6.5, 201.0], [6.6, 201.0], [6.7, 201.0], [6.8, 202.0], [6.9, 202.0], [7.0, 204.0], [7.1, 204.0], [7.2, 204.0], [7.3, 204.0], [7.4, 204.0], [7.5, 205.0], [7.6, 205.0], [7.7, 205.0], [7.8, 205.0], [7.9, 205.0], [8.0, 206.0], [8.1, 206.0], [8.2, 206.0], [8.3, 206.0], [8.4, 206.0], [8.5, 207.0], [8.6, 207.0], [8.7, 207.0], [8.8, 208.0], [8.9, 208.0], [9.0, 208.0], [9.1, 208.0], [9.2, 208.0], [9.3, 211.0], [9.4, 211.0], [9.5, 211.0], [9.6, 211.0], [9.7, 211.0], [9.8, 211.0], [9.9, 211.0], [10.0, 212.0], [10.1, 212.0], [10.2, 212.0], [10.3, 212.0], [10.4, 212.0], [10.5, 213.0], [10.6, 213.0], [10.7, 213.0], [10.8, 214.0], [10.9, 214.0], [11.0, 214.0], [11.1, 214.0], [11.2, 214.0], [11.3, 215.0], [11.4, 215.0], [11.5, 216.0], [11.6, 216.0], [11.7, 216.0], [11.8, 217.0], [11.9, 217.0], [12.0, 220.0], [12.1, 220.0], [12.2, 220.0], [12.3, 221.0], [12.4, 221.0], [12.5, 221.0], [12.6, 221.0], [12.7, 221.0], [12.8, 222.0], [12.9, 222.0], [13.0, 223.0], [13.1, 223.0], [13.2, 223.0], [13.3, 223.0], [13.4, 223.0], [13.5, 227.0], [13.6, 227.0], [13.7, 227.0], [13.8, 229.0], [13.9, 229.0], [14.0, 229.0], [14.1, 229.0], [14.2, 229.0], [14.3, 230.0], [14.4, 230.0], [14.5, 230.0], [14.6, 230.0], [14.7, 230.0], [14.8, 231.0], [14.9, 231.0], [15.0, 232.0], [15.1, 232.0], [15.2, 232.0], [15.3, 232.0], [15.4, 232.0], [15.5, 232.0], [15.6, 232.0], [15.7, 232.0], [15.8, 234.0], [15.9, 234.0], [16.0, 235.0], [16.1, 235.0], [16.2, 235.0], [16.3, 237.0], [16.4, 237.0], [16.5, 237.0], [16.6, 237.0], [16.7, 237.0], [16.8, 240.0], [16.9, 240.0], [17.0, 240.0], [17.1, 240.0], [17.2, 240.0], [17.3, 240.0], [17.4, 240.0], [17.5, 244.0], [17.6, 244.0], [17.7, 244.0], [17.8, 249.0], [17.9, 249.0], [18.0, 250.0], [18.1, 250.0], [18.2, 250.0], [18.3, 251.0], [18.4, 251.0], [18.5, 252.0], [18.6, 252.0], [18.7, 252.0], [18.8, 260.0], [18.9, 260.0], [19.0, 263.0], [19.1, 263.0], [19.2, 263.0], [19.3, 264.0], [19.4, 264.0], [19.5, 265.0], [19.6, 265.0], [19.7, 265.0], [19.8, 265.0], [19.9, 265.0], [20.0, 269.0], [20.1, 269.0], [20.2, 269.0], [20.3, 270.0], [20.4, 270.0], [20.5, 270.0], [20.6, 270.0], [20.7, 270.0], [20.8, 271.0], [20.9, 271.0], [21.0, 271.0], [21.1, 271.0], [21.2, 271.0], [21.3, 273.0], [21.4, 273.0], [21.5, 275.0], [21.6, 275.0], [21.7, 275.0], [21.8, 275.0], [21.9, 275.0], [22.0, 276.0], [22.1, 276.0], [22.2, 276.0], [22.3, 276.0], [22.4, 276.0], [22.5, 277.0], [22.6, 277.0], [22.7, 277.0], [22.8, 277.0], [22.9, 277.0], [23.0, 280.0], [23.1, 280.0], [23.2, 280.0], [23.3, 290.0], [23.4, 290.0], [23.5, 295.0], [23.6, 295.0], [23.7, 295.0], [23.8, 298.0], [23.9, 298.0], [24.0, 299.0], [24.1, 299.0], [24.2, 299.0], [24.3, 304.0], [24.4, 304.0], [24.5, 306.0], [24.6, 306.0], [24.7, 306.0], [24.8, 308.0], [24.9, 308.0], [25.0, 309.0], [25.1, 309.0], [25.2, 309.0], [25.3, 314.0], [25.4, 314.0], [25.5, 316.0], [25.6, 316.0], [25.7, 316.0], [25.8, 317.0], [25.9, 317.0], [26.0, 317.0], [26.1, 317.0], [26.2, 317.0], [26.3, 317.0], [26.4, 317.0], [26.5, 320.0], [26.6, 320.0], [26.7, 320.0], [26.8, 326.0], [26.9, 326.0], [27.0, 327.0], [27.1, 327.0], [27.2, 327.0], [27.3, 332.0], [27.4, 332.0], [27.5, 334.0], [27.6, 334.0], [27.7, 334.0], [27.8, 334.0], [27.9, 334.0], [28.0, 334.0], [28.1, 334.0], [28.2, 334.0], [28.3, 336.0], [28.4, 336.0], [28.5, 337.0], [28.6, 337.0], [28.7, 337.0], [28.8, 341.0], [28.9, 341.0], [29.0, 342.0], [29.1, 342.0], [29.2, 342.0], [29.3, 343.0], [29.4, 343.0], [29.5, 364.0], [29.6, 364.0], [29.7, 364.0], [29.8, 366.0], [29.9, 366.0], [30.0, 366.0], [30.1, 366.0], [30.2, 366.0], [30.3, 368.0], [30.4, 368.0], [30.5, 369.0], [30.6, 369.0], [30.7, 369.0], [30.8, 375.0], [30.9, 375.0], [31.0, 387.0], [31.1, 387.0], [31.2, 387.0], [31.3, 390.0], [31.4, 390.0], [31.5, 390.0], [31.6, 390.0], [31.7, 390.0], [31.8, 390.0], [31.9, 390.0], [32.0, 391.0], [32.1, 391.0], [32.2, 391.0], [32.3, 394.0], [32.4, 394.0], [32.5, 400.0], [32.6, 400.0], [32.7, 400.0], [32.8, 403.0], [32.9, 403.0], [33.0, 409.0], [33.1, 409.0], [33.2, 409.0], [33.3, 412.0], [33.4, 412.0], [33.5, 416.0], [33.6, 416.0], [33.7, 416.0], [33.8, 420.0], [33.9, 420.0], [34.0, 420.0], [34.1, 420.0], [34.2, 420.0], [34.3, 435.0], [34.4, 435.0], [34.5, 444.0], [34.6, 444.0], [34.7, 444.0], [34.8, 456.0], [34.9, 456.0], [35.0, 460.0], [35.1, 460.0], [35.2, 460.0], [35.3, 463.0], [35.4, 463.0], [35.5, 466.0], [35.6, 466.0], [35.7, 466.0], [35.8, 471.0], [35.9, 471.0], [36.0, 474.0], [36.1, 474.0], [36.2, 474.0], [36.3, 480.0], [36.4, 480.0], [36.5, 482.0], [36.6, 482.0], [36.7, 482.0], [36.8, 482.0], [36.9, 482.0], [37.0, 485.0], [37.1, 485.0], [37.2, 485.0], [37.3, 489.0], [37.4, 489.0], [37.5, 494.0], [37.6, 494.0], [37.7, 494.0], [37.8, 500.0], [37.9, 500.0], [38.0, 501.0], [38.1, 501.0], [38.2, 501.0], [38.3, 501.0], [38.4, 501.0], [38.5, 505.0], [38.6, 505.0], [38.7, 505.0], [38.8, 510.0], [38.9, 510.0], [39.0, 521.0], [39.1, 521.0], [39.2, 521.0], [39.3, 531.0], [39.4, 531.0], [39.5, 534.0], [39.6, 534.0], [39.7, 534.0], [39.8, 535.0], [39.9, 535.0], [40.0, 543.0], [40.1, 543.0], [40.2, 543.0], [40.3, 547.0], [40.4, 547.0], [40.5, 558.0], [40.6, 558.0], [40.7, 558.0], [40.8, 560.0], [40.9, 560.0], [41.0, 564.0], [41.1, 564.0], [41.2, 564.0], [41.3, 573.0], [41.4, 573.0], [41.5, 583.0], [41.6, 583.0], [41.7, 583.0], [41.8, 589.0], [41.9, 589.0], [42.0, 593.0], [42.1, 593.0], [42.2, 593.0], [42.3, 594.0], [42.4, 594.0], [42.5, 601.0], [42.6, 601.0], [42.7, 601.0], [42.8, 603.0], [42.9, 603.0], [43.0, 608.0], [43.1, 608.0], [43.2, 608.0], [43.3, 618.0], [43.4, 618.0], [43.5, 619.0], [43.6, 619.0], [43.7, 619.0], [43.8, 631.0], [43.9, 631.0], [44.0, 639.0], [44.1, 639.0], [44.2, 639.0], [44.3, 640.0], [44.4, 640.0], [44.5, 642.0], [44.6, 642.0], [44.7, 642.0], [44.8, 649.0], [44.9, 649.0], [45.0, 650.0], [45.1, 650.0], [45.2, 650.0], [45.3, 661.0], [45.4, 661.0], [45.5, 663.0], [45.6, 663.0], [45.7, 663.0], [45.8, 675.0], [45.9, 675.0], [46.0, 699.0], [46.1, 699.0], [46.2, 699.0], [46.3, 722.0], [46.4, 722.0], [46.5, 736.0], [46.6, 736.0], [46.7, 736.0], [46.8, 740.0], [46.9, 740.0], [47.0, 759.0], [47.1, 759.0], [47.2, 759.0], [47.3, 763.0], [47.4, 763.0], [47.5, 764.0], [47.6, 764.0], [47.7, 764.0], [47.8, 768.0], [47.9, 768.0], [48.0, 772.0], [48.1, 772.0], [48.2, 772.0], [48.3, 773.0], [48.4, 773.0], [48.5, 776.0], [48.6, 776.0], [48.7, 776.0], [48.8, 779.0], [48.9, 779.0], [49.0, 788.0], [49.1, 788.0], [49.2, 788.0], [49.3, 789.0], [49.4, 789.0], [49.5, 803.0], [49.6, 803.0], [49.7, 803.0], [49.8, 803.0], [49.9, 803.0], [50.0, 807.0], [50.1, 807.0], [50.2, 807.0], [50.3, 810.0], [50.4, 810.0], [50.5, 812.0], [50.6, 812.0], [50.7, 812.0], [50.8, 813.0], [50.9, 813.0], [51.0, 814.0], [51.1, 814.0], [51.2, 814.0], [51.3, 818.0], [51.4, 818.0], [51.5, 821.0], [51.6, 821.0], [51.7, 821.0], [51.8, 824.0], [51.9, 824.0], [52.0, 826.0], [52.1, 826.0], [52.2, 826.0], [52.3, 838.0], [52.4, 838.0], [52.5, 843.0], [52.6, 843.0], [52.7, 843.0], [52.8, 844.0], [52.9, 844.0], [53.0, 847.0], [53.1, 847.0], [53.2, 847.0], [53.3, 849.0], [53.4, 849.0], [53.5, 857.0], [53.6, 857.0], [53.7, 857.0], [53.8, 864.0], [53.9, 864.0], [54.0, 868.0], [54.1, 868.0], [54.2, 868.0], [54.3, 874.0], [54.4, 874.0], [54.5, 877.0], [54.6, 877.0], [54.7, 877.0], [54.8, 899.0], [54.9, 899.0], [55.0, 907.0], [55.1, 907.0], [55.2, 907.0], [55.3, 920.0], [55.4, 920.0], [55.5, 928.0], [55.6, 928.0], [55.7, 928.0], [55.8, 931.0], [55.9, 931.0], [56.0, 936.0], [56.1, 936.0], [56.2, 936.0], [56.3, 941.0], [56.4, 941.0], [56.5, 942.0], [56.6, 942.0], [56.7, 942.0], [56.8, 962.0], [56.9, 962.0], [57.0, 970.0], [57.1, 970.0], [57.2, 970.0], [57.3, 975.0], [57.4, 975.0], [57.5, 976.0], [57.6, 976.0], [57.7, 976.0], [57.8, 983.0], [57.9, 983.0], [58.0, 988.0], [58.1, 988.0], [58.2, 988.0], [58.3, 999.0], [58.4, 999.0], [58.5, 1008.0], [58.6, 1008.0], [58.7, 1008.0], [58.8, 1021.0], [58.9, 1021.0], [59.0, 1026.0], [59.1, 1026.0], [59.2, 1026.0], [59.3, 1030.0], [59.4, 1030.0], [59.5, 1033.0], [59.6, 1033.0], [59.7, 1033.0], [59.8, 1041.0], [59.9, 1041.0], [60.0, 1044.0], [60.1, 1044.0], [60.2, 1044.0], [60.3, 1045.0], [60.4, 1045.0], [60.5, 1047.0], [60.6, 1047.0], [60.7, 1047.0], [60.8, 1050.0], [60.9, 1050.0], [61.0, 1053.0], [61.1, 1053.0], [61.2, 1053.0], [61.3, 1053.0], [61.4, 1053.0], [61.5, 1055.0], [61.6, 1055.0], [61.7, 1055.0], [61.8, 1061.0], [61.9, 1061.0], [62.0, 1089.0], [62.1, 1089.0], [62.2, 1089.0], [62.3, 1094.0], [62.4, 1094.0], [62.5, 1098.0], [62.6, 1098.0], [62.7, 1098.0], [62.8, 1103.0], [62.9, 1103.0], [63.0, 1104.0], [63.1, 1104.0], [63.2, 1104.0], [63.3, 1117.0], [63.4, 1117.0], [63.5, 1118.0], [63.6, 1118.0], [63.7, 1118.0], [63.8, 1123.0], [63.9, 1123.0], [64.0, 1127.0], [64.1, 1127.0], [64.2, 1127.0], [64.3, 1130.0], [64.4, 1130.0], [64.5, 1132.0], [64.6, 1132.0], [64.7, 1132.0], [64.8, 1134.0], [64.9, 1134.0], [65.0, 1140.0], [65.1, 1140.0], [65.2, 1140.0], [65.3, 1147.0], [65.4, 1147.0], [65.5, 1150.0], [65.6, 1150.0], [65.7, 1150.0], [65.8, 1159.0], [65.9, 1159.0], [66.0, 1189.0], [66.1, 1189.0], [66.2, 1189.0], [66.3, 1216.0], [66.4, 1216.0], [66.5, 1217.0], [66.6, 1217.0], [66.7, 1217.0], [66.8, 1230.0], [66.9, 1230.0], [67.0, 1241.0], [67.1, 1241.0], [67.2, 1241.0], [67.3, 1245.0], [67.4, 1245.0], [67.5, 1248.0], [67.6, 1248.0], [67.7, 1248.0], [67.8, 1250.0], [67.9, 1250.0], [68.0, 1250.0], [68.1, 1250.0], [68.2, 1250.0], [68.3, 1251.0], [68.4, 1251.0], [68.5, 1256.0], [68.6, 1256.0], [68.7, 1256.0], [68.8, 1263.0], [68.9, 1263.0], [69.0, 1270.0], [69.1, 1270.0], [69.2, 1270.0], [69.3, 1270.0], [69.4, 1270.0], [69.5, 1277.0], [69.6, 1277.0], [69.7, 1277.0], [69.8, 1285.0], [69.9, 1285.0], [70.0, 1290.0], [70.1, 1290.0], [70.2, 1290.0], [70.3, 1295.0], [70.4, 1295.0], [70.5, 1296.0], [70.6, 1296.0], [70.7, 1296.0], [70.8, 1297.0], [70.9, 1297.0], [71.0, 1299.0], [71.1, 1299.0], [71.2, 1299.0], [71.3, 1303.0], [71.4, 1303.0], [71.5, 1304.0], [71.6, 1304.0], [71.7, 1304.0], [71.8, 1325.0], [71.9, 1325.0], [72.0, 1328.0], [72.1, 1328.0], [72.2, 1328.0], [72.3, 1337.0], [72.4, 1337.0], [72.5, 1346.0], [72.6, 1346.0], [72.7, 1346.0], [72.8, 1351.0], [72.9, 1351.0], [73.0, 1355.0], [73.1, 1355.0], [73.2, 1355.0], [73.3, 1368.0], [73.4, 1368.0], [73.5, 1377.0], [73.6, 1377.0], [73.7, 1377.0], [73.8, 1379.0], [73.9, 1379.0], [74.0, 1380.0], [74.1, 1380.0], [74.2, 1380.0], [74.3, 1382.0], [74.4, 1382.0], [74.5, 1392.0], [74.6, 1392.0], [74.7, 1392.0], [74.8, 1394.0], [74.9, 1394.0], [75.0, 1397.0], [75.1, 1397.0], [75.2, 1397.0], [75.3, 1397.0], [75.4, 1397.0], [75.5, 1401.0], [75.6, 1401.0], [75.7, 1401.0], [75.8, 1410.0], [75.9, 1410.0], [76.0, 1414.0], [76.1, 1414.0], [76.2, 1414.0], [76.3, 1417.0], [76.4, 1417.0], [76.5, 1418.0], [76.6, 1418.0], [76.7, 1418.0], [76.8, 1425.0], [76.9, 1425.0], [77.0, 1429.0], [77.1, 1429.0], [77.2, 1429.0], [77.3, 1429.0], [77.4, 1429.0], [77.5, 1435.0], [77.6, 1435.0], [77.7, 1435.0], [77.8, 1436.0], [77.9, 1436.0], [78.0, 1437.0], [78.1, 1437.0], [78.2, 1437.0], [78.3, 1438.0], [78.4, 1438.0], [78.5, 1440.0], [78.6, 1440.0], [78.7, 1440.0], [78.8, 1453.0], [78.9, 1453.0], [79.0, 1454.0], [79.1, 1454.0], [79.2, 1454.0], [79.3, 1455.0], [79.4, 1455.0], [79.5, 1462.0], [79.6, 1462.0], [79.7, 1462.0], [79.8, 1464.0], [79.9, 1464.0], [80.0, 1473.0], [80.1, 1473.0], [80.2, 1473.0], [80.3, 1481.0], [80.4, 1481.0], [80.5, 1482.0], [80.6, 1482.0], [80.7, 1482.0], [80.8, 1482.0], [80.9, 1482.0], [81.0, 1482.0], [81.1, 1482.0], [81.2, 1482.0], [81.3, 1482.0], [81.4, 1482.0], [81.5, 1488.0], [81.6, 1488.0], [81.7, 1488.0], [81.8, 1504.0], [81.9, 1504.0], [82.0, 1508.0], [82.1, 1508.0], [82.2, 1508.0], [82.3, 1517.0], [82.4, 1517.0], [82.5, 1524.0], [82.6, 1524.0], [82.7, 1524.0], [82.8, 1529.0], [82.9, 1529.0], [83.0, 1532.0], [83.1, 1532.0], [83.2, 1532.0], [83.3, 1534.0], [83.4, 1534.0], [83.5, 1536.0], [83.6, 1536.0], [83.7, 1536.0], [83.8, 1537.0], [83.9, 1537.0], [84.0, 1541.0], [84.1, 1541.0], [84.2, 1541.0], [84.3, 1544.0], [84.4, 1544.0], [84.5, 1544.0], [84.6, 1544.0], [84.7, 1544.0], [84.8, 1544.0], [84.9, 1544.0], [85.0, 1545.0], [85.1, 1545.0], [85.2, 1545.0], [85.3, 1552.0], [85.4, 1552.0], [85.5, 1554.0], [85.6, 1554.0], [85.7, 1554.0], [85.8, 1554.0], [85.9, 1554.0], [86.0, 1555.0], [86.1, 1555.0], [86.2, 1555.0], [86.3, 1556.0], [86.4, 1556.0], [86.5, 1557.0], [86.6, 1557.0], [86.7, 1557.0], [86.8, 1558.0], [86.9, 1558.0], [87.0, 1571.0], [87.1, 1571.0], [87.2, 1571.0], [87.3, 1573.0], [87.4, 1573.0], [87.5, 1574.0], [87.6, 1574.0], [87.7, 1574.0], [87.8, 1575.0], [87.9, 1575.0], [88.0, 1576.0], [88.1, 1576.0], [88.2, 1576.0], [88.3, 1576.0], [88.4, 1576.0], [88.5, 1582.0], [88.6, 1582.0], [88.7, 1582.0], [88.8, 1587.0], [88.9, 1587.0], [89.0, 1589.0], [89.1, 1589.0], [89.2, 1589.0], [89.3, 1594.0], [89.4, 1594.0], [89.5, 1598.0], [89.6, 1598.0], [89.7, 1598.0], [89.8, 1604.0], [89.9, 1604.0], [90.0, 1606.0], [90.1, 1606.0], [90.2, 1606.0], [90.3, 1610.0], [90.4, 1610.0], [90.5, 1620.0], [90.6, 1620.0], [90.7, 1620.0], [90.8, 1635.0], [90.9, 1635.0], [91.0, 1652.0], [91.1, 1652.0], [91.2, 1652.0], [91.3, 1652.0], [91.4, 1652.0], [91.5, 1657.0], [91.6, 1657.0], [91.7, 1657.0], [91.8, 1660.0], [91.9, 1660.0], [92.0, 1673.0], [92.1, 1673.0], [92.2, 1673.0], [92.3, 1677.0], [92.4, 1677.0], [92.5, 1680.0], [92.6, 1680.0], [92.7, 1680.0], [92.8, 1686.0], [92.9, 1686.0], [93.0, 1687.0], [93.1, 1687.0], [93.2, 1687.0], [93.3, 1689.0], [93.4, 1689.0], [93.5, 1691.0], [93.6, 1691.0], [93.7, 1691.0], [93.8, 1691.0], [93.9, 1691.0], [94.0, 1693.0], [94.1, 1693.0], [94.2, 1693.0], [94.3, 1696.0], [94.4, 1696.0], [94.5, 1700.0], [94.6, 1700.0], [94.7, 1700.0], [94.8, 1716.0], [94.9, 1716.0], [95.0, 1717.0], [95.1, 1717.0], [95.2, 1717.0], [95.3, 1724.0], [95.4, 1724.0], [95.5, 1730.0], [95.6, 1730.0], [95.7, 1730.0], [95.8, 1732.0], [95.9, 1732.0], [96.0, 1733.0], [96.1, 1733.0], [96.2, 1733.0], [96.3, 1737.0], [96.4, 1737.0], [96.5, 1745.0], [96.6, 1745.0], [96.7, 1745.0], [96.8, 1755.0], [96.9, 1755.0], [97.0, 1756.0], [97.1, 1756.0], [97.2, 1756.0], [97.3, 1772.0], [97.4, 1772.0], [97.5, 1787.0], [97.6, 1787.0], [97.7, 1787.0], [97.8, 1813.0], [97.9, 1813.0], [98.0, 1813.0], [98.1, 1813.0], [98.2, 1813.0], [98.3, 1827.0], [98.4, 1827.0], [98.5, 1894.0], [98.6, 1894.0], [98.7, 1894.0], [98.8, 1932.0], [98.9, 1932.0], [99.0, 1947.0], [99.1, 1947.0], [99.2, 1947.0], [99.3, 1967.0], [99.4, 1967.0], [99.5, 1968.0], [99.6, 1968.0], [99.7, 1968.0], [99.8, 1972.0], [99.9, 1972.0]], "isOverall": false, "label": "Create Task-1", "isController": false}, {"data": [[0.0, 162.0], [0.1, 162.0], [0.2, 162.0], [0.3, 167.0], [0.4, 167.0], [0.5, 170.0], [0.6, 170.0], [0.7, 170.0], [0.8, 174.0], [0.9, 174.0], [1.0, 175.0], [1.1, 175.0], [1.2, 175.0], [1.3, 177.0], [1.4, 177.0], [1.5, 179.0], [1.6, 179.0], [1.7, 179.0], [1.8, 181.0], [1.9, 181.0], [2.0, 185.0], [2.1, 185.0], [2.2, 185.0], [2.3, 187.0], [2.4, 187.0], [2.5, 190.0], [2.6, 190.0], [2.7, 190.0], [2.8, 190.0], [2.9, 190.0], [3.0, 193.0], [3.1, 193.0], [3.2, 193.0], [3.3, 194.0], [3.4, 194.0], [3.5, 197.0], [3.6, 197.0], [3.7, 197.0], [3.8, 198.0], [3.9, 198.0], [4.0, 198.0], [4.1, 198.0], [4.2, 198.0], [4.3, 199.0], [4.4, 199.0], [4.5, 199.0], [4.6, 199.0], [4.7, 199.0], [4.8, 200.0], [4.9, 200.0], [5.0, 203.0], [5.1, 203.0], [5.2, 203.0], [5.3, 204.0], [5.4, 204.0], [5.5, 204.0], [5.6, 204.0], [5.7, 204.0], [5.8, 205.0], [5.9, 205.0], [6.0, 206.0], [6.1, 206.0], [6.2, 206.0], [6.3, 208.0], [6.4, 208.0], [6.5, 208.0], [6.6, 208.0], [6.7, 208.0], [6.8, 208.0], [6.9, 208.0], [7.0, 209.0], [7.1, 209.0], [7.2, 209.0], [7.3, 209.0], [7.4, 209.0], [7.5, 210.0], [7.6, 210.0], [7.7, 210.0], [7.8, 210.0], [7.9, 210.0], [8.0, 211.0], [8.1, 211.0], [8.2, 211.0], [8.3, 212.0], [8.4, 212.0], [8.5, 215.0], [8.6, 215.0], [8.7, 215.0], [8.8, 217.0], [8.9, 217.0], [9.0, 217.0], [9.1, 217.0], [9.2, 217.0], [9.3, 218.0], [9.4, 218.0], [9.5, 218.0], [9.6, 218.0], [9.7, 218.0], [9.8, 218.0], [9.9, 218.0], [10.0, 220.0], [10.1, 220.0], [10.2, 220.0], [10.3, 222.0], [10.4, 222.0], [10.5, 223.0], [10.6, 223.0], [10.7, 223.0], [10.8, 223.0], [10.9, 223.0], [11.0, 224.0], [11.1, 224.0], [11.2, 224.0], [11.3, 224.0], [11.4, 224.0], [11.5, 226.0], [11.6, 226.0], [11.7, 226.0], [11.8, 227.0], [11.9, 227.0], [12.0, 227.0], [12.1, 227.0], [12.2, 227.0], [12.3, 232.0], [12.4, 232.0], [12.5, 233.0], [12.6, 233.0], [12.7, 233.0], [12.8, 234.0], [12.9, 234.0], [13.0, 235.0], [13.1, 235.0], [13.2, 235.0], [13.3, 235.0], [13.4, 235.0], [13.5, 235.0], [13.6, 235.0], [13.7, 235.0], [13.8, 237.0], [13.9, 237.0], [14.0, 237.0], [14.1, 237.0], [14.2, 237.0], [14.3, 239.0], [14.4, 239.0], [14.5, 239.0], [14.6, 239.0], [14.7, 239.0], [14.8, 240.0], [14.9, 240.0], [15.0, 240.0], [15.1, 240.0], [15.2, 240.0], [15.3, 240.0], [15.4, 240.0], [15.5, 242.0], [15.6, 242.0], [15.7, 242.0], [15.8, 242.0], [15.9, 242.0], [16.0, 246.0], [16.1, 246.0], [16.2, 246.0], [16.3, 246.0], [16.4, 246.0], [16.5, 248.0], [16.6, 248.0], [16.7, 248.0], [16.8, 249.0], [16.9, 249.0], [17.0, 249.0], [17.1, 249.0], [17.2, 249.0], [17.3, 250.0], [17.4, 250.0], [17.5, 253.0], [17.6, 253.0], [17.7, 253.0], [17.8, 256.0], [17.9, 256.0], [18.0, 258.0], [18.1, 258.0], [18.2, 258.0], [18.3, 261.0], [18.4, 261.0], [18.5, 262.0], [18.6, 262.0], [18.7, 262.0], [18.8, 269.0], [18.9, 269.0], [19.0, 270.0], [19.1, 270.0], [19.2, 270.0], [19.3, 271.0], [19.4, 271.0], [19.5, 275.0], [19.6, 275.0], [19.7, 275.0], [19.8, 281.0], [19.9, 281.0], [20.0, 288.0], [20.1, 288.0], [20.2, 288.0], [20.3, 288.0], [20.4, 288.0], [20.5, 293.0], [20.6, 293.0], [20.7, 293.0], [20.8, 293.0], [20.9, 293.0], [21.0, 300.0], [21.1, 300.0], [21.2, 300.0], [21.3, 303.0], [21.4, 303.0], [21.5, 310.0], [21.6, 310.0], [21.7, 310.0], [21.8, 311.0], [21.9, 311.0], [22.0, 312.0], [22.1, 312.0], [22.2, 312.0], [22.3, 315.0], [22.4, 315.0], [22.5, 317.0], [22.6, 317.0], [22.7, 317.0], [22.8, 321.0], [22.9, 321.0], [23.0, 321.0], [23.1, 321.0], [23.2, 321.0], [23.3, 325.0], [23.4, 325.0], [23.5, 333.0], [23.6, 333.0], [23.7, 333.0], [23.8, 334.0], [23.9, 334.0], [24.0, 335.0], [24.1, 335.0], [24.2, 335.0], [24.3, 342.0], [24.4, 342.0], [24.5, 344.0], [24.6, 344.0], [24.7, 344.0], [24.8, 352.0], [24.9, 352.0], [25.0, 353.0], [25.1, 353.0], [25.2, 353.0], [25.3, 358.0], [25.4, 358.0], [25.5, 359.0], [25.6, 359.0], [25.7, 359.0], [25.8, 361.0], [25.9, 361.0], [26.0, 367.0], [26.1, 367.0], [26.2, 367.0], [26.3, 374.0], [26.4, 374.0], [26.5, 376.0], [26.6, 376.0], [26.7, 376.0], [26.8, 376.0], [26.9, 376.0], [27.0, 381.0], [27.1, 381.0], [27.2, 381.0], [27.3, 385.0], [27.4, 385.0], [27.5, 389.0], [27.6, 389.0], [27.7, 389.0], [27.8, 390.0], [27.9, 390.0], [28.0, 390.0], [28.1, 390.0], [28.2, 390.0], [28.3, 391.0], [28.4, 391.0], [28.5, 391.0], [28.6, 391.0], [28.7, 391.0], [28.8, 394.0], [28.9, 394.0], [29.0, 395.0], [29.1, 395.0], [29.2, 395.0], [29.3, 398.0], [29.4, 398.0], [29.5, 399.0], [29.6, 399.0], [29.7, 399.0], [29.8, 414.0], [29.9, 414.0], [30.0, 447.0], [30.1, 447.0], [30.2, 447.0], [30.3, 447.0], [30.4, 447.0], [30.5, 453.0], [30.6, 453.0], [30.7, 453.0], [30.8, 454.0], [30.9, 454.0], [31.0, 457.0], [31.1, 457.0], [31.2, 457.0], [31.3, 458.0], [31.4, 458.0], [31.5, 464.0], [31.6, 464.0], [31.7, 464.0], [31.8, 466.0], [31.9, 466.0], [32.0, 468.0], [32.1, 468.0], [32.2, 468.0], [32.3, 471.0], [32.4, 471.0], [32.5, 473.0], [32.6, 473.0], [32.7, 473.0], [32.8, 475.0], [32.9, 475.0], [33.0, 476.0], [33.1, 476.0], [33.2, 476.0], [33.3, 478.0], [33.4, 478.0], [33.5, 478.0], [33.6, 478.0], [33.7, 478.0], [33.8, 479.0], [33.9, 479.0], [34.0, 481.0], [34.1, 481.0], [34.2, 481.0], [34.3, 486.0], [34.4, 486.0], [34.5, 486.0], [34.6, 486.0], [34.7, 486.0], [34.8, 487.0], [34.9, 487.0], [35.0, 491.0], [35.1, 491.0], [35.2, 491.0], [35.3, 491.0], [35.4, 491.0], [35.5, 491.0], [35.6, 491.0], [35.7, 491.0], [35.8, 492.0], [35.9, 492.0], [36.0, 494.0], [36.1, 494.0], [36.2, 494.0], [36.3, 496.0], [36.4, 496.0], [36.5, 499.0], [36.6, 499.0], [36.7, 499.0], [36.8, 503.0], [36.9, 503.0], [37.0, 504.0], [37.1, 504.0], [37.2, 504.0], [37.3, 510.0], [37.4, 510.0], [37.5, 513.0], [37.6, 513.0], [37.7, 513.0], [37.8, 513.0], [37.9, 513.0], [38.0, 516.0], [38.1, 516.0], [38.2, 516.0], [38.3, 520.0], [38.4, 520.0], [38.5, 522.0], [38.6, 522.0], [38.7, 522.0], [38.8, 524.0], [38.9, 524.0], [39.0, 533.0], [39.1, 533.0], [39.2, 533.0], [39.3, 539.0], [39.4, 539.0], [39.5, 543.0], [39.6, 543.0], [39.7, 543.0], [39.8, 548.0], [39.9, 548.0], [40.0, 553.0], [40.1, 553.0], [40.2, 553.0], [40.3, 569.0], [40.4, 569.0], [40.5, 578.0], [40.6, 578.0], [40.7, 578.0], [40.8, 591.0], [40.9, 591.0], [41.0, 591.0], [41.1, 591.0], [41.2, 591.0], [41.3, 592.0], [41.4, 592.0], [41.5, 593.0], [41.6, 593.0], [41.7, 593.0], [41.8, 599.0], [41.9, 599.0], [42.0, 600.0], [42.1, 600.0], [42.2, 600.0], [42.3, 605.0], [42.4, 605.0], [42.5, 619.0], [42.6, 619.0], [42.7, 619.0], [42.8, 624.0], [42.9, 624.0], [43.0, 636.0], [43.1, 636.0], [43.2, 636.0], [43.3, 652.0], [43.4, 652.0], [43.5, 656.0], [43.6, 656.0], [43.7, 656.0], [43.8, 670.0], [43.9, 670.0], [44.0, 676.0], [44.1, 676.0], [44.2, 676.0], [44.3, 679.0], [44.4, 679.0], [44.5, 691.0], [44.6, 691.0], [44.7, 691.0], [44.8, 707.0], [44.9, 707.0], [45.0, 726.0], [45.1, 726.0], [45.2, 726.0], [45.3, 763.0], [45.4, 763.0], [45.5, 772.0], [45.6, 772.0], [45.7, 772.0], [45.8, 774.0], [45.9, 774.0], [46.0, 780.0], [46.1, 780.0], [46.2, 780.0], [46.3, 784.0], [46.4, 784.0], [46.5, 796.0], [46.6, 796.0], [46.7, 796.0], [46.8, 804.0], [46.9, 804.0], [47.0, 813.0], [47.1, 813.0], [47.2, 813.0], [47.3, 826.0], [47.4, 826.0], [47.5, 833.0], [47.6, 833.0], [47.7, 833.0], [47.8, 838.0], [47.9, 838.0], [48.0, 840.0], [48.1, 840.0], [48.2, 840.0], [48.3, 841.0], [48.4, 841.0], [48.5, 859.0], [48.6, 859.0], [48.7, 859.0], [48.8, 866.0], [48.9, 866.0], [49.0, 872.0], [49.1, 872.0], [49.2, 872.0], [49.3, 876.0], [49.4, 876.0], [49.5, 879.0], [49.6, 879.0], [49.7, 879.0], [49.8, 879.0], [49.9, 879.0], [50.0, 881.0], [50.1, 881.0], [50.2, 881.0], [50.3, 886.0], [50.4, 886.0], [50.5, 892.0], [50.6, 892.0], [50.7, 892.0], [50.8, 894.0], [50.9, 894.0], [51.0, 896.0], [51.1, 896.0], [51.2, 896.0], [51.3, 899.0], [51.4, 899.0], [51.5, 900.0], [51.6, 900.0], [51.7, 900.0], [51.8, 902.0], [51.9, 902.0], [52.0, 907.0], [52.1, 907.0], [52.2, 907.0], [52.3, 908.0], [52.4, 908.0], [52.5, 908.0], [52.6, 908.0], [52.7, 908.0], [52.8, 912.0], [52.9, 912.0], [53.0, 921.0], [53.1, 921.0], [53.2, 921.0], [53.3, 932.0], [53.4, 932.0], [53.5, 940.0], [53.6, 940.0], [53.7, 940.0], [53.8, 945.0], [53.9, 945.0], [54.0, 952.0], [54.1, 952.0], [54.2, 952.0], [54.3, 956.0], [54.4, 956.0], [54.5, 963.0], [54.6, 963.0], [54.7, 963.0], [54.8, 970.0], [54.9, 970.0], [55.0, 972.0], [55.1, 972.0], [55.2, 972.0], [55.3, 975.0], [55.4, 975.0], [55.5, 980.0], [55.6, 980.0], [55.7, 980.0], [55.8, 984.0], [55.9, 984.0], [56.0, 994.0], [56.1, 994.0], [56.2, 994.0], [56.3, 998.0], [56.4, 998.0], [56.5, 999.0], [56.6, 999.0], [56.7, 999.0], [56.8, 1002.0], [56.9, 1002.0], [57.0, 1005.0], [57.1, 1005.0], [57.2, 1005.0], [57.3, 1005.0], [57.4, 1005.0], [57.5, 1008.0], [57.6, 1008.0], [57.7, 1008.0], [57.8, 1011.0], [57.9, 1011.0], [58.0, 1029.0], [58.1, 1029.0], [58.2, 1029.0], [58.3, 1033.0], [58.4, 1033.0], [58.5, 1033.0], [58.6, 1033.0], [58.7, 1033.0], [58.8, 1037.0], [58.9, 1037.0], [59.0, 1037.0], [59.1, 1037.0], [59.2, 1037.0], [59.3, 1039.0], [59.4, 1039.0], [59.5, 1043.0], [59.6, 1043.0], [59.7, 1043.0], [59.8, 1043.0], [59.9, 1043.0], [60.0, 1044.0], [60.1, 1044.0], [60.2, 1044.0], [60.3, 1045.0], [60.4, 1045.0], [60.5, 1053.0], [60.6, 1053.0], [60.7, 1053.0], [60.8, 1057.0], [60.9, 1057.0], [61.0, 1064.0], [61.1, 1064.0], [61.2, 1064.0], [61.3, 1067.0], [61.4, 1067.0], [61.5, 1069.0], [61.6, 1069.0], [61.7, 1069.0], [61.8, 1071.0], [61.9, 1071.0], [62.0, 1073.0], [62.1, 1073.0], [62.2, 1073.0], [62.3, 1079.0], [62.4, 1079.0], [62.5, 1080.0], [62.6, 1080.0], [62.7, 1080.0], [62.8, 1081.0], [62.9, 1081.0], [63.0, 1084.0], [63.1, 1084.0], [63.2, 1084.0], [63.3, 1085.0], [63.4, 1085.0], [63.5, 1086.0], [63.6, 1086.0], [63.7, 1086.0], [63.8, 1086.0], [63.9, 1086.0], [64.0, 1090.0], [64.1, 1090.0], [64.2, 1090.0], [64.3, 1090.0], [64.4, 1090.0], [64.5, 1091.0], [64.6, 1091.0], [64.7, 1091.0], [64.8, 1092.0], [64.9, 1092.0], [65.0, 1092.0], [65.1, 1092.0], [65.2, 1092.0], [65.3, 1093.0], [65.4, 1093.0], [65.5, 1093.0], [65.6, 1093.0], [65.7, 1093.0], [65.8, 1094.0], [65.9, 1094.0], [66.0, 1097.0], [66.1, 1097.0], [66.2, 1097.0], [66.3, 1101.0], [66.4, 1101.0], [66.5, 1110.0], [66.6, 1110.0], [66.7, 1110.0], [66.8, 1114.0], [66.9, 1114.0], [67.0, 1115.0], [67.1, 1115.0], [67.2, 1115.0], [67.3, 1116.0], [67.4, 1116.0], [67.5, 1123.0], [67.6, 1123.0], [67.7, 1123.0], [67.8, 1124.0], [67.9, 1124.0], [68.0, 1127.0], [68.1, 1127.0], [68.2, 1127.0], [68.3, 1135.0], [68.4, 1135.0], [68.5, 1135.0], [68.6, 1135.0], [68.7, 1135.0], [68.8, 1136.0], [68.9, 1136.0], [69.0, 1137.0], [69.1, 1137.0], [69.2, 1137.0], [69.3, 1141.0], [69.4, 1141.0], [69.5, 1148.0], [69.6, 1148.0], [69.7, 1148.0], [69.8, 1152.0], [69.9, 1152.0], [70.0, 1153.0], [70.1, 1153.0], [70.2, 1153.0], [70.3, 1170.0], [70.4, 1170.0], [70.5, 1172.0], [70.6, 1172.0], [70.7, 1172.0], [70.8, 1180.0], [70.9, 1180.0], [71.0, 1180.0], [71.1, 1180.0], [71.2, 1180.0], [71.3, 1201.0], [71.4, 1201.0], [71.5, 1203.0], [71.6, 1203.0], [71.7, 1203.0], [71.8, 1209.0], [71.9, 1209.0], [72.0, 1212.0], [72.1, 1212.0], [72.2, 1212.0], [72.3, 1213.0], [72.4, 1213.0], [72.5, 1214.0], [72.6, 1214.0], [72.7, 1214.0], [72.8, 1215.0], [72.9, 1215.0], [73.0, 1231.0], [73.1, 1231.0], [73.2, 1231.0], [73.3, 1231.0], [73.4, 1231.0], [73.5, 1234.0], [73.6, 1234.0], [73.7, 1234.0], [73.8, 1241.0], [73.9, 1241.0], [74.0, 1254.0], [74.1, 1254.0], [74.2, 1254.0], [74.3, 1255.0], [74.4, 1255.0], [74.5, 1257.0], [74.6, 1257.0], [74.7, 1257.0], [74.8, 1266.0], [74.9, 1266.0], [75.0, 1266.0], [75.1, 1266.0], [75.2, 1266.0], [75.3, 1268.0], [75.4, 1268.0], [75.5, 1269.0], [75.6, 1269.0], [75.7, 1269.0], [75.8, 1270.0], [75.9, 1270.0], [76.0, 1289.0], [76.1, 1289.0], [76.2, 1289.0], [76.3, 1301.0], [76.4, 1301.0], [76.5, 1309.0], [76.6, 1309.0], [76.7, 1309.0], [76.8, 1316.0], [76.9, 1316.0], [77.0, 1323.0], [77.1, 1323.0], [77.2, 1323.0], [77.3, 1324.0], [77.4, 1324.0], [77.5, 1324.0], [77.6, 1324.0], [77.7, 1324.0], [77.8, 1336.0], [77.9, 1336.0], [78.0, 1350.0], [78.1, 1350.0], [78.2, 1350.0], [78.3, 1361.0], [78.4, 1361.0], [78.5, 1384.0], [78.6, 1384.0], [78.7, 1384.0], [78.8, 1394.0], [78.9, 1394.0], [79.0, 1398.0], [79.1, 1398.0], [79.2, 1398.0], [79.3, 1402.0], [79.4, 1402.0], [79.5, 1410.0], [79.6, 1410.0], [79.7, 1410.0], [79.8, 1418.0], [79.9, 1418.0], [80.0, 1426.0], [80.1, 1426.0], [80.2, 1426.0], [80.3, 1438.0], [80.4, 1438.0], [80.5, 1444.0], [80.6, 1444.0], [80.7, 1444.0], [80.8, 1451.0], [80.9, 1451.0], [81.0, 1451.0], [81.1, 1451.0], [81.2, 1451.0], [81.3, 1455.0], [81.4, 1455.0], [81.5, 1463.0], [81.6, 1463.0], [81.7, 1463.0], [81.8, 1465.0], [81.9, 1465.0], [82.0, 1468.0], [82.1, 1468.0], [82.2, 1468.0], [82.3, 1476.0], [82.4, 1476.0], [82.5, 1479.0], [82.6, 1479.0], [82.7, 1479.0], [82.8, 1484.0], [82.9, 1484.0], [83.0, 1486.0], [83.1, 1486.0], [83.2, 1486.0], [83.3, 1489.0], [83.4, 1489.0], [83.5, 1492.0], [83.6, 1492.0], [83.7, 1492.0], [83.8, 1493.0], [83.9, 1493.0], [84.0, 1494.0], [84.1, 1494.0], [84.2, 1494.0], [84.3, 1495.0], [84.4, 1495.0], [84.5, 1497.0], [84.6, 1497.0], [84.7, 1497.0], [84.8, 1497.0], [84.9, 1497.0], [85.0, 1498.0], [85.1, 1498.0], [85.2, 1498.0], [85.3, 1506.0], [85.4, 1506.0], [85.5, 1506.0], [85.6, 1506.0], [85.7, 1506.0], [85.8, 1507.0], [85.9, 1507.0], [86.0, 1510.0], [86.1, 1510.0], [86.2, 1510.0], [86.3, 1517.0], [86.4, 1517.0], [86.5, 1525.0], [86.6, 1525.0], [86.7, 1525.0], [86.8, 1527.0], [86.9, 1527.0], [87.0, 1527.0], [87.1, 1527.0], [87.2, 1527.0], [87.3, 1535.0], [87.4, 1535.0], [87.5, 1540.0], [87.6, 1540.0], [87.7, 1540.0], [87.8, 1542.0], [87.9, 1542.0], [88.0, 1545.0], [88.1, 1545.0], [88.2, 1545.0], [88.3, 1546.0], [88.4, 1546.0], [88.5, 1547.0], [88.6, 1547.0], [88.7, 1547.0], [88.8, 1553.0], [88.9, 1553.0], [89.0, 1575.0], [89.1, 1575.0], [89.2, 1575.0], [89.3, 1575.0], [89.4, 1575.0], [89.5, 1579.0], [89.6, 1579.0], [89.7, 1579.0], [89.8, 1584.0], [89.9, 1584.0], [90.0, 1585.0], [90.1, 1585.0], [90.2, 1585.0], [90.3, 1588.0], [90.4, 1588.0], [90.5, 1589.0], [90.6, 1589.0], [90.7, 1589.0], [90.8, 1590.0], [90.9, 1590.0], [91.0, 1595.0], [91.1, 1595.0], [91.2, 1595.0], [91.3, 1601.0], [91.4, 1601.0], [91.5, 1602.0], [91.6, 1602.0], [91.7, 1602.0], [91.8, 1615.0], [91.9, 1615.0], [92.0, 1617.0], [92.1, 1617.0], [92.2, 1617.0], [92.3, 1621.0], [92.4, 1621.0], [92.5, 1626.0], [92.6, 1626.0], [92.7, 1626.0], [92.8, 1626.0], [92.9, 1626.0], [93.0, 1628.0], [93.1, 1628.0], [93.2, 1628.0], [93.3, 1637.0], [93.4, 1637.0], [93.5, 1638.0], [93.6, 1638.0], [93.7, 1638.0], [93.8, 1638.0], [93.9, 1638.0], [94.0, 1644.0], [94.1, 1644.0], [94.2, 1644.0], [94.3, 1666.0], [94.4, 1666.0], [94.5, 1674.0], [94.6, 1674.0], [94.7, 1674.0], [94.8, 1682.0], [94.9, 1682.0], [95.0, 1684.0], [95.1, 1684.0], [95.2, 1684.0], [95.3, 1684.0], [95.4, 1684.0], [95.5, 1685.0], [95.6, 1685.0], [95.7, 1685.0], [95.8, 1689.0], [95.9, 1689.0], [96.0, 1697.0], [96.1, 1697.0], [96.2, 1697.0], [96.3, 1700.0], [96.4, 1700.0], [96.5, 1701.0], [96.6, 1701.0], [96.7, 1701.0], [96.8, 1703.0], [96.9, 1703.0], [97.0, 1705.0], [97.1, 1705.0], [97.2, 1705.0], [97.3, 1714.0], [97.4, 1714.0], [97.5, 1738.0], [97.6, 1738.0], [97.7, 1738.0], [97.8, 1743.0], [97.9, 1743.0], [98.0, 1785.0], [98.1, 1785.0], [98.2, 1785.0], [98.3, 1787.0], [98.4, 1787.0], [98.5, 1801.0], [98.6, 1801.0], [98.7, 1801.0], [98.8, 1868.0], [98.9, 1868.0], [99.0, 1912.0], [99.1, 1912.0], [99.2, 1912.0], [99.3, 1956.0], [99.4, 1956.0], [99.5, 1958.0], [99.6, 1958.0], [99.7, 1958.0], [99.8, 2083.0], [99.9, 2083.0]], "isOverall": false, "label": "Create Task-2", "isController": false}, {"data": [[0.0, 568.0], [0.1, 568.0], [0.2, 568.0], [0.3, 577.0], [0.4, 577.0], [0.5, 603.0], [0.6, 603.0], [0.7, 603.0], [0.8, 628.0], [0.9, 628.0], [1.0, 640.0], [1.1, 640.0], [1.2, 640.0], [1.3, 765.0], [1.4, 765.0], [1.5, 989.0], [1.6, 989.0], [1.7, 989.0], [1.8, 1018.0], [1.9, 1018.0], [2.0, 1033.0], [2.1, 1033.0], [2.2, 1033.0], [2.3, 1166.0], [2.4, 1166.0], [2.5, 1212.0], [2.6, 1212.0], [2.7, 1212.0], [2.8, 1238.0], [2.9, 1238.0], [3.0, 1506.0], [3.1, 1506.0], [3.2, 1506.0], [3.3, 1635.0], [3.4, 1635.0], [3.5, 1646.0], [3.6, 1646.0], [3.7, 1646.0], [3.8, 1700.0], [3.9, 1700.0], [4.0, 1758.0], [4.1, 1758.0], [4.2, 1758.0], [4.3, 1822.0], [4.4, 1822.0], [4.5, 1925.0], [4.6, 1925.0], [4.7, 1925.0], [4.8, 1966.0], [4.9, 1966.0], [5.0, 2031.0], [5.1, 2031.0], [5.2, 2031.0], [5.3, 2088.0], [5.4, 2088.0], [5.5, 2100.0], [5.6, 2100.0], [5.7, 2100.0], [5.8, 2102.0], [5.9, 2102.0], [6.0, 2202.0], [6.1, 2202.0], [6.2, 2202.0], [6.3, 2203.0], [6.4, 2203.0], [6.5, 2260.0], [6.6, 2260.0], [6.7, 2260.0], [6.8, 2283.0], [6.9, 2283.0], [7.0, 2310.0], [7.1, 2310.0], [7.2, 2310.0], [7.3, 2390.0], [7.4, 2390.0], [7.5, 2454.0], [7.6, 2454.0], [7.7, 2454.0], [7.8, 2502.0], [7.9, 2502.0], [8.0, 2531.0], [8.1, 2531.0], [8.2, 2531.0], [8.3, 2621.0], [8.4, 2621.0], [8.5, 2688.0], [8.6, 2688.0], [8.7, 2688.0], [8.8, 2693.0], [8.9, 2693.0], [9.0, 2699.0], [9.1, 2699.0], [9.2, 2699.0], [9.3, 2862.0], [9.4, 2862.0], [9.5, 2896.0], [9.6, 2896.0], [9.7, 2896.0], [9.8, 2921.0], [9.9, 2921.0], [10.0, 2931.0], [10.1, 2931.0], [10.2, 2931.0], [10.3, 2953.0], [10.4, 2953.0], [10.5, 3008.0], [10.6, 3008.0], [10.7, 3008.0], [10.8, 3066.0], [10.9, 3066.0], [11.0, 3098.0], [11.1, 3098.0], [11.2, 3098.0], [11.3, 3107.0], [11.4, 3107.0], [11.5, 3178.0], [11.6, 3178.0], [11.7, 3178.0], [11.8, 3220.0], [11.9, 3220.0], [12.0, 3273.0], [12.1, 3273.0], [12.2, 3273.0], [12.3, 3299.0], [12.4, 3299.0], [12.5, 3333.0], [12.6, 3333.0], [12.7, 3333.0], [12.8, 3370.0], [12.9, 3370.0], [13.0, 3433.0], [13.1, 3433.0], [13.2, 3433.0], [13.3, 3447.0], [13.4, 3447.0], [13.5, 3500.0], [13.6, 3500.0], [13.7, 3500.0], [13.8, 3588.0], [13.9, 3588.0], [14.0, 3598.0], [14.1, 3598.0], [14.2, 3598.0], [14.3, 3606.0], [14.4, 3606.0], [14.5, 3612.0], [14.6, 3612.0], [14.7, 3612.0], [14.8, 3621.0], [14.9, 3621.0], [15.0, 3644.0], [15.1, 3644.0], [15.2, 3644.0], [15.3, 3757.0], [15.4, 3757.0], [15.5, 3762.0], [15.6, 3762.0], [15.7, 3762.0], [15.8, 3791.0], [15.9, 3791.0], [16.0, 3792.0], [16.1, 3792.0], [16.2, 3792.0], [16.3, 3813.0], [16.4, 3813.0], [16.5, 3939.0], [16.6, 3939.0], [16.7, 3939.0], [16.8, 3981.0], [16.9, 3981.0], [17.0, 4144.0], [17.1, 4144.0], [17.2, 4144.0], [17.3, 4153.0], [17.4, 4153.0], [17.5, 4160.0], [17.6, 4160.0], [17.7, 4160.0], [17.8, 4166.0], [17.9, 4166.0], [18.0, 4181.0], [18.1, 4181.0], [18.2, 4181.0], [18.3, 4193.0], [18.4, 4193.0], [18.5, 4215.0], [18.6, 4215.0], [18.7, 4215.0], [18.8, 4234.0], [18.9, 4234.0], [19.0, 4242.0], [19.1, 4242.0], [19.2, 4242.0], [19.3, 4304.0], [19.4, 4304.0], [19.5, 4320.0], [19.6, 4320.0], [19.7, 4320.0], [19.8, 4325.0], [19.9, 4325.0], [20.0, 4335.0], [20.1, 4335.0], [20.2, 4335.0], [20.3, 4346.0], [20.4, 4346.0], [20.5, 4349.0], [20.6, 4349.0], [20.7, 4349.0], [20.8, 4365.0], [20.9, 4365.0], [21.0, 4391.0], [21.1, 4391.0], [21.2, 4391.0], [21.3, 4432.0], [21.4, 4432.0], [21.5, 4434.0], [21.6, 4434.0], [21.7, 4434.0], [21.8, 4437.0], [21.9, 4437.0], [22.0, 4470.0], [22.1, 4470.0], [22.2, 4470.0], [22.3, 4494.0], [22.4, 4494.0], [22.5, 4506.0], [22.6, 4506.0], [22.7, 4506.0], [22.8, 4700.0], [22.9, 4700.0], [23.0, 4710.0], [23.1, 4710.0], [23.2, 4710.0], [23.3, 4740.0], [23.4, 4740.0], [23.5, 4741.0], [23.6, 4741.0], [23.7, 4741.0], [23.8, 4746.0], [23.9, 4746.0], [24.0, 4779.0], [24.1, 4779.0], [24.2, 4779.0], [24.3, 4817.0], [24.4, 4817.0], [24.5, 4822.0], [24.6, 4822.0], [24.7, 4822.0], [24.8, 4883.0], [24.9, 4883.0], [25.0, 4883.0], [25.1, 4883.0], [25.2, 4883.0], [25.3, 4890.0], [25.4, 4890.0], [25.5, 4898.0], [25.6, 4898.0], [25.7, 4898.0], [25.8, 4947.0], [25.9, 4947.0], [26.0, 4952.0], [26.1, 4952.0], [26.2, 4952.0], [26.3, 4966.0], [26.4, 4966.0], [26.5, 4998.0], [26.6, 4998.0], [26.7, 4998.0], [26.8, 4998.0], [26.9, 4998.0], [27.0, 5063.0], [27.1, 5063.0], [27.2, 5063.0], [27.3, 5065.0], [27.4, 5065.0], [27.5, 5075.0], [27.6, 5075.0], [27.7, 5075.0], [27.8, 5083.0], [27.9, 5083.0], [28.0, 5151.0], [28.1, 5151.0], [28.2, 5151.0], [28.3, 5171.0], [28.4, 5171.0], [28.5, 5175.0], [28.6, 5175.0], [28.7, 5175.0], [28.8, 5181.0], [28.9, 5181.0], [29.0, 5211.0], [29.1, 5211.0], [29.2, 5211.0], [29.3, 5231.0], [29.4, 5231.0], [29.5, 5302.0], [29.6, 5302.0], [29.7, 5302.0], [29.8, 5311.0], [29.9, 5311.0], [30.0, 5314.0], [30.1, 5314.0], [30.2, 5314.0], [30.3, 5367.0], [30.4, 5367.0], [30.5, 5381.0], [30.6, 5381.0], [30.7, 5381.0], [30.8, 5392.0], [30.9, 5392.0], [31.0, 5399.0], [31.1, 5399.0], [31.2, 5399.0], [31.3, 5465.0], [31.4, 5465.0], [31.5, 5483.0], [31.6, 5483.0], [31.7, 5483.0], [31.8, 5510.0], [31.9, 5510.0], [32.0, 5518.0], [32.1, 5518.0], [32.2, 5518.0], [32.3, 5523.0], [32.4, 5523.0], [32.5, 5533.0], [32.6, 5533.0], [32.7, 5533.0], [32.8, 5545.0], [32.9, 5545.0], [33.0, 5548.0], [33.1, 5548.0], [33.2, 5548.0], [33.3, 5630.0], [33.4, 5630.0], [33.5, 5643.0], [33.6, 5643.0], [33.7, 5643.0], [33.8, 5657.0], [33.9, 5657.0], [34.0, 5684.0], [34.1, 5684.0], [34.2, 5684.0], [34.3, 5698.0], [34.4, 5698.0], [34.5, 5700.0], [34.6, 5700.0], [34.7, 5700.0], [34.8, 5708.0], [34.9, 5708.0], [35.0, 5757.0], [35.1, 5757.0], [35.2, 5757.0], [35.3, 5777.0], [35.4, 5777.0], [35.5, 5781.0], [35.6, 5781.0], [35.7, 5781.0], [35.8, 5787.0], [35.9, 5787.0], [36.0, 5792.0], [36.1, 5792.0], [36.2, 5792.0], [36.3, 5799.0], [36.4, 5799.0], [36.5, 5803.0], [36.6, 5803.0], [36.7, 5803.0], [36.8, 5830.0], [36.9, 5830.0], [37.0, 5836.0], [37.1, 5836.0], [37.2, 5836.0], [37.3, 5843.0], [37.4, 5843.0], [37.5, 5865.0], [37.6, 5865.0], [37.7, 5865.0], [37.8, 5866.0], [37.9, 5866.0], [38.0, 5867.0], [38.1, 5867.0], [38.2, 5867.0], [38.3, 5870.0], [38.4, 5870.0], [38.5, 6030.0], [38.6, 6030.0], [38.7, 6030.0], [38.8, 6035.0], [38.9, 6035.0], [39.0, 6036.0], [39.1, 6036.0], [39.2, 6036.0], [39.3, 6081.0], [39.4, 6081.0], [39.5, 6247.0], [39.6, 6247.0], [39.7, 6247.0], [39.8, 6350.0], [39.9, 6350.0], [40.0, 6357.0], [40.1, 6357.0], [40.2, 6357.0], [40.3, 6383.0], [40.4, 6383.0], [40.5, 6416.0], [40.6, 6416.0], [40.7, 6416.0], [40.8, 6493.0], [40.9, 6493.0], [41.0, 6515.0], [41.1, 6515.0], [41.2, 6515.0], [41.3, 6607.0], [41.4, 6607.0], [41.5, 6671.0], [41.6, 6671.0], [41.7, 6671.0], [41.8, 6683.0], [41.9, 6683.0], [42.0, 6761.0], [42.1, 6761.0], [42.2, 6761.0], [42.3, 6793.0], [42.4, 6793.0], [42.5, 6798.0], [42.6, 6798.0], [42.7, 6798.0], [42.8, 6829.0], [42.9, 6829.0], [43.0, 6832.0], [43.1, 6832.0], [43.2, 6832.0], [43.3, 6884.0], [43.4, 6884.0], [43.5, 6915.0], [43.6, 6915.0], [43.7, 6915.0], [43.8, 6942.0], [43.9, 6942.0], [44.0, 6976.0], [44.1, 6976.0], [44.2, 6976.0], [44.3, 7087.0], [44.4, 7087.0], [44.5, 7110.0], [44.6, 7110.0], [44.7, 7110.0], [44.8, 7114.0], [44.9, 7114.0], [45.0, 7138.0], [45.1, 7138.0], [45.2, 7138.0], [45.3, 7155.0], [45.4, 7155.0], [45.5, 7173.0], [45.6, 7173.0], [45.7, 7173.0], [45.8, 7188.0], [45.9, 7188.0], [46.0, 7192.0], [46.1, 7192.0], [46.2, 7192.0], [46.3, 7199.0], [46.4, 7199.0], [46.5, 7211.0], [46.6, 7211.0], [46.7, 7211.0], [46.8, 7408.0], [46.9, 7408.0], [47.0, 7507.0], [47.1, 7507.0], [47.2, 7507.0], [47.3, 7552.0], [47.4, 7552.0], [47.5, 7597.0], [47.6, 7597.0], [47.7, 7597.0], [47.8, 7689.0], [47.9, 7689.0], [48.0, 7707.0], [48.1, 7707.0], [48.2, 7707.0], [48.3, 7768.0], [48.4, 7768.0], [48.5, 7773.0], [48.6, 7773.0], [48.7, 7773.0], [48.8, 7782.0], [48.9, 7782.0], [49.0, 7806.0], [49.1, 7806.0], [49.2, 7806.0], [49.3, 7810.0], [49.4, 7810.0], [49.5, 7817.0], [49.6, 7817.0], [49.7, 7817.0], [49.8, 7845.0], [49.9, 7845.0], [50.0, 7851.0], [50.1, 7851.0], [50.2, 7851.0], [50.3, 7876.0], [50.4, 7876.0], [50.5, 7892.0], [50.6, 7892.0], [50.7, 7892.0], [50.8, 7900.0], [50.9, 7900.0], [51.0, 7906.0], [51.1, 7906.0], [51.2, 7906.0], [51.3, 7907.0], [51.4, 7907.0], [51.5, 7908.0], [51.6, 7908.0], [51.7, 7908.0], [51.8, 7909.0], [51.9, 7909.0], [52.0, 7925.0], [52.1, 7925.0], [52.2, 7925.0], [52.3, 7928.0], [52.4, 7928.0], [52.5, 7936.0], [52.6, 7936.0], [52.7, 7936.0], [52.8, 7956.0], [52.9, 7956.0], [53.0, 7960.0], [53.1, 7960.0], [53.2, 7960.0], [53.3, 7964.0], [53.4, 7964.0], [53.5, 7989.0], [53.6, 7989.0], [53.7, 7989.0], [53.8, 8032.0], [53.9, 8032.0], [54.0, 8056.0], [54.1, 8056.0], [54.2, 8056.0], [54.3, 8075.0], [54.4, 8075.0], [54.5, 8101.0], [54.6, 8101.0], [54.7, 8101.0], [54.8, 8107.0], [54.9, 8107.0], [55.0, 8153.0], [55.1, 8153.0], [55.2, 8153.0], [55.3, 8293.0], [55.4, 8293.0], [55.5, 8299.0], [55.6, 8299.0], [55.7, 8299.0], [55.8, 8306.0], [55.9, 8306.0], [56.0, 8335.0], [56.1, 8335.0], [56.2, 8335.0], [56.3, 8346.0], [56.4, 8346.0], [56.5, 8385.0], [56.6, 8385.0], [56.7, 8385.0], [56.8, 8424.0], [56.9, 8424.0], [57.0, 8472.0], [57.1, 8472.0], [57.2, 8472.0], [57.3, 8496.0], [57.4, 8496.0], [57.5, 8548.0], [57.6, 8548.0], [57.7, 8548.0], [57.8, 8588.0], [57.9, 8588.0], [58.0, 8674.0], [58.1, 8674.0], [58.2, 8674.0], [58.3, 8740.0], [58.4, 8740.0], [58.5, 8766.0], [58.6, 8766.0], [58.7, 8766.0], [58.8, 8851.0], [58.9, 8851.0], [59.0, 8890.0], [59.1, 8890.0], [59.2, 8890.0], [59.3, 8919.0], [59.4, 8919.0], [59.5, 8992.0], [59.6, 8992.0], [59.7, 8992.0], [59.8, 9044.0], [59.9, 9044.0], [60.0, 9078.0], [60.1, 9078.0], [60.2, 9078.0], [60.3, 9151.0], [60.4, 9151.0], [60.5, 9164.0], [60.6, 9164.0], [60.7, 9164.0], [60.8, 9266.0], [60.9, 9266.0], [61.0, 9280.0], [61.1, 9280.0], [61.2, 9280.0], [61.3, 9296.0], [61.4, 9296.0], [61.5, 9331.0], [61.6, 9331.0], [61.7, 9331.0], [61.8, 9350.0], [61.9, 9350.0], [62.0, 9372.0], [62.1, 9372.0], [62.2, 9372.0], [62.3, 9399.0], [62.4, 9399.0], [62.5, 9405.0], [62.6, 9405.0], [62.7, 9405.0], [62.8, 9453.0], [62.9, 9453.0], [63.0, 9534.0], [63.1, 9534.0], [63.2, 9534.0], [63.3, 9577.0], [63.4, 9577.0], [63.5, 9603.0], [63.6, 9603.0], [63.7, 9603.0], [63.8, 9640.0], [63.9, 9640.0], [64.0, 9640.0], [64.1, 9640.0], [64.2, 9640.0], [64.3, 9650.0], [64.4, 9650.0], [64.5, 9671.0], [64.6, 9671.0], [64.7, 9671.0], [64.8, 9696.0], [64.9, 9696.0], [65.0, 9713.0], [65.1, 9713.0], [65.2, 9713.0], [65.3, 9720.0], [65.4, 9720.0], [65.5, 9737.0], [65.6, 9737.0], [65.7, 9737.0], [65.8, 9768.0], [65.9, 9768.0], [66.0, 9803.0], [66.1, 9803.0], [66.2, 9803.0], [66.3, 9845.0], [66.4, 9845.0], [66.5, 9868.0], [66.6, 9868.0], [66.7, 9868.0], [66.8, 9902.0], [66.9, 9902.0], [67.0, 9906.0], [67.1, 9906.0], [67.2, 9906.0], [67.3, 9925.0], [67.4, 9925.0], [67.5, 9948.0], [67.6, 9948.0], [67.7, 9948.0], [67.8, 9949.0], [67.9, 9949.0], [68.0, 9973.0], [68.1, 9973.0], [68.2, 9973.0], [68.3, 9975.0], [68.4, 9975.0], [68.5, 9991.0], [68.6, 9991.0], [68.7, 9991.0], [68.8, 10010.0], [68.9, 10010.0], [69.0, 10030.0], [69.1, 10030.0], [69.2, 10030.0], [69.3, 10031.0], [69.4, 10031.0], [69.5, 10033.0], [69.6, 10033.0], [69.7, 10033.0], [69.8, 10048.0], [69.9, 10048.0], [70.0, 10085.0], [70.1, 10085.0], [70.2, 10085.0], [70.3, 10146.0], [70.4, 10146.0], [70.5, 10169.0], [70.6, 10169.0], [70.7, 10169.0], [70.8, 10173.0], [70.9, 10173.0], [71.0, 10182.0], [71.1, 10182.0], [71.2, 10182.0], [71.3, 10206.0], [71.4, 10206.0], [71.5, 10210.0], [71.6, 10210.0], [71.7, 10210.0], [71.8, 10222.0], [71.9, 10222.0], [72.0, 10230.0], [72.1, 10230.0], [72.2, 10230.0], [72.3, 10310.0], [72.4, 10310.0], [72.5, 10329.0], [72.6, 10329.0], [72.7, 10329.0], [72.8, 10368.0], [72.9, 10368.0], [73.0, 10434.0], [73.1, 10434.0], [73.2, 10434.0], [73.3, 10495.0], [73.4, 10495.0], [73.5, 10496.0], [73.6, 10496.0], [73.7, 10496.0], [73.8, 10505.0], [73.9, 10505.0], [74.0, 10506.0], [74.1, 10506.0], [74.2, 10506.0], [74.3, 10549.0], [74.4, 10549.0], [74.5, 10552.0], [74.6, 10552.0], [74.7, 10552.0], [74.8, 10560.0], [74.9, 10560.0], [75.0, 10617.0], [75.1, 10617.0], [75.2, 10617.0], [75.3, 10671.0], [75.4, 10671.0], [75.5, 10832.0], [75.6, 10832.0], [75.7, 10832.0], [75.8, 10836.0], [75.9, 10836.0], [76.0, 10867.0], [76.1, 10867.0], [76.2, 10867.0], [76.3, 10875.0], [76.4, 10875.0], [76.5, 10893.0], [76.6, 10893.0], [76.7, 10893.0], [76.8, 10894.0], [76.9, 10894.0], [77.0, 10898.0], [77.1, 10898.0], [77.2, 10898.0], [77.3, 10929.0], [77.4, 10929.0], [77.5, 11004.0], [77.6, 11004.0], [77.7, 11004.0], [77.8, 11008.0], [77.9, 11008.0], [78.0, 11103.0], [78.1, 11103.0], [78.2, 11103.0], [78.3, 11140.0], [78.4, 11140.0], [78.5, 11175.0], [78.6, 11175.0], [78.7, 11175.0], [78.8, 11180.0], [78.9, 11180.0], [79.0, 11203.0], [79.1, 11203.0], [79.2, 11203.0], [79.3, 11254.0], [79.4, 11254.0], [79.5, 11282.0], [79.6, 11282.0], [79.7, 11282.0], [79.8, 11298.0], [79.9, 11298.0], [80.0, 11304.0], [80.1, 11304.0], [80.2, 11304.0], [80.3, 11318.0], [80.4, 11318.0], [80.5, 11321.0], [80.6, 11321.0], [80.7, 11321.0], [80.8, 11323.0], [80.9, 11323.0], [81.0, 11329.0], [81.1, 11329.0], [81.2, 11329.0], [81.3, 11330.0], [81.4, 11330.0], [81.5, 11336.0], [81.6, 11336.0], [81.7, 11336.0], [81.8, 11341.0], [81.9, 11341.0], [82.0, 11345.0], [82.1, 11345.0], [82.2, 11345.0], [82.3, 11351.0], [82.4, 11351.0], [82.5, 11353.0], [82.6, 11353.0], [82.7, 11353.0], [82.8, 11357.0], [82.9, 11357.0], [83.0, 11357.0], [83.1, 11357.0], [83.2, 11357.0], [83.3, 11360.0], [83.4, 11360.0], [83.5, 11363.0], [83.6, 11363.0], [83.7, 11363.0], [83.8, 11366.0], [83.9, 11366.0], [84.0, 11368.0], [84.1, 11368.0], [84.2, 11368.0], [84.3, 11368.0], [84.4, 11368.0], [84.5, 11371.0], [84.6, 11371.0], [84.7, 11371.0], [84.8, 11376.0], [84.9, 11376.0], [85.0, 11378.0], [85.1, 11378.0], [85.2, 11378.0], [85.3, 11388.0], [85.4, 11388.0], [85.5, 11391.0], [85.6, 11391.0], [85.7, 11391.0], [85.8, 11394.0], [85.9, 11394.0], [86.0, 11395.0], [86.1, 11395.0], [86.2, 11395.0], [86.3, 11397.0], [86.4, 11397.0], [86.5, 11413.0], [86.6, 11413.0], [86.7, 11413.0], [86.8, 11424.0], [86.9, 11424.0], [87.0, 11426.0], [87.1, 11426.0], [87.2, 11426.0], [87.3, 11430.0], [87.4, 11430.0], [87.5, 11434.0], [87.6, 11434.0], [87.7, 11434.0], [87.8, 11439.0], [87.9, 11439.0], [88.0, 11440.0], [88.1, 11440.0], [88.2, 11440.0], [88.3, 11447.0], [88.4, 11447.0], [88.5, 11464.0], [88.6, 11464.0], [88.7, 11464.0], [88.8, 11474.0], [88.9, 11474.0], [89.0, 11477.0], [89.1, 11477.0], [89.2, 11477.0], [89.3, 11478.0], [89.4, 11478.0], [89.5, 11491.0], [89.6, 11491.0], [89.7, 11491.0], [89.8, 11492.0], [89.9, 11492.0], [90.0, 11496.0], [90.1, 11496.0], [90.2, 11496.0], [90.3, 11499.0], [90.4, 11499.0], [90.5, 11505.0], [90.6, 11505.0], [90.7, 11505.0], [90.8, 11506.0], [90.9, 11506.0], [91.0, 11513.0], [91.1, 11513.0], [91.2, 11513.0], [91.3, 11520.0], [91.4, 11520.0], [91.5, 11521.0], [91.6, 11521.0], [91.7, 11521.0], [91.8, 11525.0], [91.9, 11525.0], [92.0, 11530.0], [92.1, 11530.0], [92.2, 11530.0], [92.3, 11530.0], [92.4, 11530.0], [92.5, 11540.0], [92.6, 11540.0], [92.7, 11540.0], [92.8, 11545.0], [92.9, 11545.0], [93.0, 11546.0], [93.1, 11546.0], [93.2, 11546.0], [93.3, 11548.0], [93.4, 11548.0], [93.5, 11549.0], [93.6, 11549.0], [93.7, 11549.0], [93.8, 11554.0], [93.9, 11554.0], [94.0, 11562.0], [94.1, 11562.0], [94.2, 11562.0], [94.3, 11564.0], [94.4, 11564.0], [94.5, 11566.0], [94.6, 11566.0], [94.7, 11566.0], [94.8, 11575.0], [94.9, 11575.0], [95.0, 11577.0], [95.1, 11577.0], [95.2, 11577.0], [95.3, 11580.0], [95.4, 11580.0], [95.5, 11587.0], [95.6, 11587.0], [95.7, 11587.0], [95.8, 11589.0], [95.9, 11589.0], [96.0, 11620.0], [96.1, 11620.0], [96.2, 11620.0], [96.3, 11628.0], [96.4, 11628.0], [96.5, 11638.0], [96.6, 11638.0], [96.7, 11638.0], [96.8, 11653.0], [96.9, 11653.0], [97.0, 11657.0], [97.1, 11657.0], [97.2, 11657.0], [97.3, 11658.0], [97.4, 11658.0], [97.5, 11660.0], [97.6, 11660.0], [97.7, 11660.0], [97.8, 11660.0], [97.9, 11660.0], [98.0, 11665.0], [98.1, 11665.0], [98.2, 11665.0], [98.3, 11690.0], [98.4, 11690.0], [98.5, 11713.0], [98.6, 11713.0], [98.7, 11713.0], [98.8, 11731.0], [98.9, 11731.0], [99.0, 11749.0], [99.1, 11749.0], [99.2, 11749.0], [99.3, 11752.0], [99.4, 11752.0], [99.5, 11773.0], [99.6, 11773.0], [99.7, 11773.0], [99.8, 11778.0], [99.9, 11778.0]], "isOverall": false, "label": "Create Task", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 73.0, "series": [{"data": [[600.0, 2.0], [700.0, 3.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 2.0], [1300.0, 2.0], [1500.0, 2.0], [1600.0, 4.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 3.0], [2200.0, 4.0], [2400.0, 2.0], [2500.0, 4.0], [2600.0, 3.0], [2700.0, 2.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 4.0], [3200.0, 2.0], [3300.0, 5.0], [3400.0, 1.0], [3500.0, 2.0], [3600.0, 10.0], [3700.0, 6.0], [3800.0, 6.0], [3900.0, 1.0], [4000.0, 2.0], [4100.0, 3.0], [4300.0, 15.0], [4200.0, 8.0], [4400.0, 5.0], [4600.0, 9.0], [4500.0, 1.0], [4700.0, 10.0], [4800.0, 11.0], [4900.0, 4.0], [5100.0, 2.0], [5300.0, 2.0], [5200.0, 4.0], [5600.0, 7.0], [5400.0, 7.0], [5500.0, 5.0], [5700.0, 7.0], [5800.0, 8.0], [6100.0, 5.0], [6000.0, 8.0], [5900.0, 10.0], [6200.0, 5.0], [6600.0, 10.0], [6400.0, 2.0], [6500.0, 2.0], [6700.0, 13.0], [6800.0, 5.0], [6900.0, 3.0], [7100.0, 9.0], [7000.0, 6.0], [7200.0, 5.0], [7400.0, 1.0], [7300.0, 8.0], [7500.0, 7.0], [7600.0, 5.0], [7900.0, 4.0], [7800.0, 2.0], [8100.0, 2.0], [8300.0, 2.0], [8400.0, 2.0], [8200.0, 3.0], [8500.0, 4.0], [8600.0, 8.0], [8700.0, 23.0], [8800.0, 17.0], [9100.0, 3.0], [9000.0, 5.0], [8900.0, 2.0], [9200.0, 4.0], [9300.0, 10.0], [9400.0, 3.0], [100.0, 4.0], [200.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "Create Task-0", "isController": false}, {"data": [[600.0, 15.0], [700.0, 13.0], [200.0, 73.0], [800.0, 22.0], [900.0, 14.0], [1000.0, 17.0], [1100.0, 14.0], [300.0, 33.0], [1200.0, 20.0], [1300.0, 17.0], [1400.0, 25.0], [1500.0, 32.0], [100.0, 24.0], [400.0, 21.0], [1600.0, 19.0], [1700.0, 13.0], [1800.0, 4.0], [1900.0, 5.0], [500.0, 19.0]], "isOverall": false, "label": "Create Task-1", "isController": false}, {"data": [[600.0, 11.0], [700.0, 8.0], [200.0, 65.0], [800.0, 19.0], [900.0, 21.0], [1000.0, 38.0], [1100.0, 20.0], [300.0, 35.0], [1200.0, 20.0], [1300.0, 12.0], [1400.0, 24.0], [1500.0, 24.0], [100.0, 19.0], [400.0, 28.0], [1600.0, 20.0], [1700.0, 9.0], [1800.0, 2.0], [1900.0, 3.0], [500.0, 21.0], [2000.0, 1.0]], "isOverall": false, "label": "Create Task-2", "isController": false}, {"data": [[500.0, 2.0], [600.0, 3.0], [700.0, 1.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 2.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 4.0], [2800.0, 2.0], [2900.0, 3.0], [3000.0, 3.0], [3100.0, 2.0], [3200.0, 3.0], [3300.0, 2.0], [3400.0, 2.0], [3500.0, 3.0], [3600.0, 4.0], [3700.0, 4.0], [3800.0, 1.0], [3900.0, 2.0], [4100.0, 6.0], [4200.0, 3.0], [4300.0, 8.0], [4400.0, 5.0], [4500.0, 1.0], [4700.0, 6.0], [4800.0, 6.0], [4900.0, 5.0], [5100.0, 4.0], [5000.0, 4.0], [5300.0, 7.0], [5200.0, 2.0], [5400.0, 2.0], [5500.0, 6.0], [5600.0, 5.0], [5700.0, 8.0], [5800.0, 8.0], [6000.0, 4.0], [6300.0, 3.0], [6200.0, 1.0], [6400.0, 2.0], [6600.0, 3.0], [6500.0, 1.0], [6800.0, 3.0], [6900.0, 3.0], [6700.0, 3.0], [7000.0, 1.0], [7100.0, 8.0], [7200.0, 1.0], [7400.0, 1.0], [7500.0, 3.0], [7600.0, 1.0], [7700.0, 4.0], [7800.0, 7.0], [7900.0, 12.0], [8000.0, 3.0], [8100.0, 3.0], [8300.0, 4.0], [8200.0, 2.0], [8500.0, 2.0], [8700.0, 2.0], [8600.0, 1.0], [8400.0, 3.0], [8800.0, 2.0], [8900.0, 2.0], [9100.0, 2.0], [9000.0, 2.0], [9200.0, 3.0], [9300.0, 4.0], [9400.0, 2.0], [9500.0, 2.0], [9600.0, 6.0], [9700.0, 4.0], [9900.0, 8.0], [9800.0, 3.0], [10000.0, 6.0], [10200.0, 4.0], [10100.0, 4.0], [10300.0, 3.0], [10500.0, 5.0], [10400.0, 3.0], [10600.0, 2.0], [10800.0, 7.0], [11200.0, 4.0], [11100.0, 4.0], [11000.0, 2.0], [10900.0, 1.0], [11300.0, 26.0], [11400.0, 16.0], [11500.0, 22.0], [11600.0, 10.0], [11700.0, 6.0]], "isOverall": false, "label": "Create Task", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 305.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 901.0, "series": [{"data": [[0.0, 305.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 394.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 901.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 198.5649999999995, "minX": 1.70192472E12, "maxY": 198.5649999999995, "series": [{"data": [[1.70192472E12, 198.5649999999995]], "isOverall": false, "label": "Create_task", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70192472E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 162.0, "minX": 1.0, "maxY": 11773.0, "series": [{"data": [[2.0, 9425.0], [3.0, 9396.0], [4.0, 9280.0], [6.0, 9385.5], [7.0, 9429.0], [8.0, 9353.0], [9.0, 9357.0], [10.0, 9357.0], [11.0, 9277.0], [12.0, 9360.0], [13.0, 9352.0], [14.0, 9291.0], [15.0, 9052.0], [16.0, 9283.0], [17.0, 9359.0], [18.0, 8966.0], [19.0, 9363.0], [20.0, 8807.0], [21.0, 9008.0], [22.0, 8748.0], [25.0, 8940.0], [26.0, 9118.0], [27.0, 8873.0], [29.0, 8800.0], [30.0, 8859.0], [33.0, 8761.0], [32.0, 8751.0], [39.0, 8731.0], [41.0, 8765.0], [40.0, 8825.0], [43.0, 8749.0], [42.0, 9048.0], [44.0, 8797.0], [47.0, 9171.0], [46.0, 8712.5], [49.0, 8856.5], [51.0, 8922.5], [52.0, 8744.0], [57.0, 8829.0], [56.0, 8860.25], [59.0, 8620.0], [58.0, 8598.0], [61.0, 8808.0], [63.0, 8176.5], [67.0, 8761.0], [66.0, 8766.0], [65.0, 8601.0], [64.0, 8255.0], [71.0, 8779.0], [70.0, 8720.5], [68.0, 8752.0], [75.0, 8620.0], [74.0, 8748.0], [73.0, 8735.0], [72.0, 8189.0], [79.0, 8558.0], [78.0, 8635.0], [77.0, 8738.0], [76.0, 8832.0], [83.0, 8616.0], [82.0, 8609.0], [81.0, 8276.5], [87.0, 7945.0], [86.0, 7603.0], [85.0, 7789.0], [91.0, 8144.0], [90.0, 7837.0], [89.0, 8579.0], [88.0, 7593.0], [94.0, 8230.0], [93.0, 8356.5], [99.0, 7569.0], [98.0, 7642.0], [97.0, 8313.0], [96.0, 8171.0], [103.0, 7578.0], [102.0, 7069.0], [100.0, 7316.0], [106.0, 7528.0], [105.0, 7167.0], [104.0, 7118.0], [111.0, 7377.0], [110.0, 7018.0], [109.0, 7319.0], [108.0, 7309.0], [115.0, 6833.0], [114.0, 7121.0], [113.0, 7282.0], [112.0, 7137.0], [119.0, 7001.0], [118.0, 7614.0], [117.0, 6902.0], [116.0, 7571.0], [123.0, 6782.0], [122.0, 7149.0], [121.0, 7138.0], [120.0, 6740.0], [127.0, 6860.666666666667], [124.0, 7016.0], [135.0, 6666.0], [134.0, 7241.0], [133.0, 7031.0], [132.0, 7346.0], [131.0, 6721.0], [130.0, 6728.0], [129.0, 6687.0], [128.0, 7291.0], [143.0, 7556.0], [142.0, 6733.0], [141.0, 7358.0], [140.0, 7602.0], [139.0, 6830.0], [138.0, 7372.0], [137.0, 7392.0], [136.0, 6662.0], [151.0, 6680.0], [150.0, 6699.0], [149.0, 7269.0], [148.0, 7130.0], [147.0, 6695.0], [146.0, 7402.5], [144.0, 7117.0], [159.0, 6833.0], [158.0, 6560.0], [157.0, 6657.0], [156.0, 6733.0], [155.0, 6956.0], [154.0, 6851.0], [153.0, 6745.0], [152.0, 7235.0], [167.0, 5875.0], [166.0, 6729.0], [165.0, 5859.0], [164.0, 6722.0], [163.0, 6850.0], [162.0, 6775.0], [161.0, 6957.0], [160.0, 6469.0], [175.0, 6433.0], [174.0, 6027.0], [173.0, 6509.0], [172.0, 5804.0], [171.0, 6271.0], [170.0, 6677.0], [169.0, 6145.0], [168.0, 5743.0], [183.0, 6758.0], [182.0, 6037.0], [181.0, 5942.0], [180.0, 5929.0], [179.0, 5904.0], [178.0, 5873.0], [177.0, 6661.0], [176.0, 5676.0], [190.0, 5909.0], [188.0, 6192.0], [187.0, 5867.0], [186.0, 6011.0], [185.0, 5839.0], [184.0, 5922.0], [199.0, 6096.0], [198.0, 6020.0], [197.0, 5808.0], [196.0, 5904.0], [195.0, 5912.0], [194.0, 6108.0], [193.0, 5974.0], [192.0, 6124.5], [207.0, 6277.0], [206.0, 6102.0], [205.0, 6090.0], [204.0, 6019.0], [203.0, 5904.0], [202.0, 5770.0], [201.0, 5896.0], [200.0, 5618.0], [215.0, 5424.0], [214.0, 5439.0], [213.0, 5510.0], [212.0, 5742.0], [211.0, 5716.0], [210.0, 6244.0], [209.0, 6119.0], [208.0, 6238.0], [223.0, 5664.0], [222.0, 5456.0], [221.0, 5748.0], [220.0, 5239.0], [219.0, 5193.0], [218.0, 5501.0], [217.0, 5387.0], [216.0, 4880.0], [231.0, 5541.0], [230.0, 5527.0], [228.0, 5432.0], [227.0, 5684.0], [226.0, 5293.0], [225.0, 5225.0], [224.0, 5779.0], [239.0, 4762.0], [238.0, 4765.0], [237.0, 5497.0], [236.0, 5586.0], [235.0, 5384.0], [234.0, 5185.0], [233.0, 5684.0], [232.0, 4900.0], [246.0, 2585.0], [247.0, 4882.0], [245.0, 5613.0], [244.0, 4838.0], [243.0, 5609.0], [242.0, 5438.0], [241.0, 5536.0], [240.0, 5450.0], [254.0, 1601.3333333333333], [255.0, 4454.0], [253.0, 4698.0], [252.0, 4518.0], [251.0, 4701.0], [250.0, 4805.0], [249.0, 4809.0], [248.0, 4994.0], [269.0, 4304.0], [271.0, 4798.0], [267.0, 3100.6666666666665], [270.0, 4384.0], [268.0, 4275.0], [259.0, 4805.0], [258.0, 4795.0], [257.0, 4798.0], [256.0, 4797.0], [265.0, 4804.0], [264.0, 4808.0], [263.0, 4802.0], [262.0, 4900.0], [261.0, 4597.5], [286.0, 4487.0], [275.0, 1739.3333333333333], [274.0, 4347.0], [273.0, 4409.0], [272.0, 4701.0], [287.0, 4416.0], [285.0, 4682.0], [284.0, 4677.0], [283.0, 4658.0], [282.0, 4733.0], [281.0, 4731.0], [279.0, 4695.0], [278.0, 4682.0], [277.0, 4331.0], [276.0, 4692.0], [302.0, 4046.0], [303.0, 4175.0], [301.0, 4219.0], [300.0, 4124.0], [298.0, 4211.0], [297.0, 4370.0], [296.0, 4349.0], [295.0, 4304.0], [289.0, 4357.0], [288.0, 4316.0], [291.0, 4344.0], [290.0, 4331.0], [294.0, 4256.0], [293.0, 4279.0], [292.0, 4274.0], [318.0, 3794.0], [319.0, 3844.0], [317.0, 3838.0], [316.0, 3682.0], [315.0, 3866.0], [314.0, 3776.0], [313.0, 3766.0], [312.0, 3872.0], [311.0, 3698.0], [307.0, 3969.0], [306.0, 4233.666666666667], [310.0, 3865.0], [309.0, 4189.0], [308.0, 4316.0], [334.0, 3334.0], [335.0, 3518.0], [333.0, 3489.0], [332.0, 3635.0], [331.0, 3665.0], [330.0, 3658.0], [329.0, 3646.0], [328.0, 3590.0], [327.0, 3660.0], [320.0, 3631.0], [323.0, 3697.5], [321.0, 3724.0], [326.0, 3837.0], [325.0, 3704.0], [350.0, 2873.0], [351.0, 2921.0], [349.0, 2956.0], [348.0, 3043.0], [347.0, 3030.0], [346.0, 3201.0], [345.0, 3212.0], [344.0, 3180.0], [343.0, 3101.0], [337.0, 3328.0], [336.0, 3345.0], [339.0, 3174.0], [338.0, 3301.0], [342.0, 3023.0], [341.0, 3177.0], [340.0, 3332.0], [366.0, 2275.0], [367.0, 2298.0], [365.0, 2283.0], [364.0, 2291.0], [363.0, 2486.0], [362.0, 2519.0], [361.0, 2452.0], [360.0, 2538.0], [359.0, 2512.0], [353.0, 2656.0], [352.0, 2857.0], [355.0, 2583.0], [354.0, 2783.0], [358.0, 2679.0], [357.0, 2620.0], [356.0, 2745.0], [382.0, 1660.0], [383.0, 1378.0], [381.0, 1500.0], [380.0, 1603.0], [378.0, 1665.0], [377.0, 1655.0], [376.0, 1780.0], [375.0, 1807.0], [369.0, 2111.0], [368.0, 2188.0], [371.0, 1923.0], [370.0, 2119.0], [374.0, 1960.0], [373.0, 1924.0], [372.0, 2033.0], [384.0, 919.5], [386.0, 624.0], [392.0, 637.0], [391.0, 755.0], [390.0, 787.0], [389.0, 771.0], [388.0, 1178.0], [387.0, 1151.5], [385.0, 1330.0], [1.0, 9374.0]], "isOverall": false, "label": "Create Task-0", "isController": false}, {"data": [[198.56499999999988, 5766.220000000001]], "isOverall": false, "label": "Create Task-0-Aggregated", "isController": false}, {"data": [[2.0, 1438.0], [3.0, 1429.0], [4.0, 1700.0], [6.0, 1456.5], [7.0, 1453.0], [8.0, 1241.0], [9.0, 1401.0], [10.0, 1397.0], [11.0, 1418.0], [12.0, 1380.0], [13.0, 1379.0], [14.0, 1436.0], [15.0, 1696.0], [16.0, 1417.0], [17.0, 1304.0], [18.0, 1589.0], [19.0, 1250.0], [20.0, 1972.0], [21.0, 1473.0], [22.0, 1680.0], [25.0, 1566.6666666666667], [26.0, 1429.0], [27.0, 1813.0], [29.0, 1597.0], [30.0, 1594.0], [33.0, 1932.0], [32.0, 1665.0], [39.0, 1741.6666666666665], [41.0, 1677.0], [40.0, 1827.0], [43.0, 1693.0], [42.0, 1730.0], [44.0, 1737.0], [47.0, 1454.0], [46.0, 1636.0], [49.0, 1525.5], [51.0, 1487.5], [52.0, 1557.0], [57.0, 1894.0], [56.0, 1556.0], [59.0, 1724.0], [58.0, 1787.0], [61.0, 1618.0], [63.0, 1507.0], [67.0, 1717.0], [66.0, 1555.0], [65.0, 1532.0], [64.0, 1689.0], [71.0, 1571.0], [70.0, 1744.0], [68.0, 1575.0], [75.0, 1544.0], [74.0, 1482.0], [73.0, 1686.0], [72.0, 1508.0], [79.0, 1482.0], [78.0, 1392.0], [77.0, 1691.0], [76.0, 1536.0], [83.0, 1673.0], [82.0, 1504.0], [81.0, 1479.0], [87.0, 1606.0], [86.0, 1652.0], [85.0, 1671.0], [91.0, 1524.0], [90.0, 1482.0], [89.0, 1576.0], [88.0, 1813.0], [94.0, 1270.0], [93.0, 1545.0], [99.0, 1325.0], [98.0, 1337.0], [97.0, 1435.0], [96.0, 1341.0], [103.0, 1377.0], [102.0, 1584.0], [100.0, 1598.0], [106.0, 1303.0], [105.0, 1517.0], [104.0, 1529.0], [111.0, 1217.0], [110.0, 1256.0], [109.0, 1462.0], [108.0, 1464.5], [115.0, 1248.0], [114.0, 1346.0], [113.0, 1482.0], [112.0, 1554.0], [119.0, 1290.0], [118.0, 970.0], [117.0, 1397.0], [116.0, 1251.0], [123.0, 1440.0], [122.0, 1216.0], [121.0, 1297.0], [120.0, 1296.0], [127.0, 1222.6666666666667], [124.0, 1118.0], [135.0, 1544.0], [134.0, 1134.0], [133.0, 1299.0], [132.0, 1410.0], [131.0, 1230.0], [130.0, 1285.0], [129.0, 1368.0], [128.0, 1328.0], [143.0, 1050.0], [142.0, 1147.0], [141.0, 1132.0], [140.0, 1123.0], [139.0, 1159.0], [138.0, 1117.0], [137.0, 1150.0], [136.0, 1604.0], [151.0, 1061.0], [150.0, 1104.0], [149.0, 1098.0], [148.0, 1089.0], [147.0, 1130.0], [146.0, 1117.0], [144.0, 1263.0], [159.0, 1053.0], [158.0, 810.0], [157.0, 1026.0], [156.0, 988.0], [155.0, 1045.0], [154.0, 1055.0], [153.0, 1041.0], [152.0, 1250.0], [167.0, 1351.0], [166.0, 920.0], [165.0, 1382.0], [164.0, 813.0], [163.0, 962.0], [162.0, 941.0], [161.0, 699.0], [160.0, 1127.0], [175.0, 975.0], [174.0, 1189.0], [173.0, 907.0], [172.0, 936.0], [171.0, 931.0], [170.0, 1033.0], [169.0, 983.0], [168.0, 1044.0], [183.0, 814.0], [182.0, 1030.0], [181.0, 818.0], [180.0, 1053.0], [179.0, 999.0], [178.0, 942.0], [177.0, 803.0], [176.0, 976.0], [190.0, 794.5], [188.0, 740.0], [187.0, 843.0], [186.0, 1021.0], [185.0, 1008.0], [184.0, 877.0], [199.0, 821.0], [198.0, 803.0], [197.0, 838.0], [196.0, 868.0], [195.0, 824.0], [194.0, 847.0], [193.0, 849.0], [192.0, 901.0], [207.0, 773.0], [206.0, 759.0], [205.0, 772.0], [204.0, 788.0], [203.0, 736.0], [202.0, 812.0], [201.0, 844.0], [200.0, 807.0], [215.0, 649.0], [214.0, 864.0], [213.0, 768.0], [212.0, 857.0], [211.0, 899.0], [210.0, 675.0], [209.0, 764.0], [208.0, 722.0], [223.0, 650.0], [222.0, 779.0], [221.0, 416.0], [220.0, 639.0], [219.0, 789.0], [218.0, 603.0], [217.0, 776.0], [216.0, 663.0], [231.0, 594.0], [230.0, 550.5], [228.0, 640.0], [227.0, 608.0], [226.0, 619.0], [225.0, 573.0], [224.0, 589.0], [239.0, 409.0], [238.0, 618.0], [237.0, 466.0], [236.0, 390.0], [235.0, 290.0], [234.0, 642.0], [233.0, 631.0], [232.0, 661.0], [246.0, 334.5], [247.0, 369.0], [245.0, 341.0], [244.0, 564.0], [243.0, 343.0], [242.0, 317.0], [241.0, 364.0], [240.0, 277.0], [254.0, 281.3333333333333], [255.0, 531.0], [253.0, 412.0], [252.0, 534.0], [251.0, 444.0], [250.0, 501.0], [249.0, 403.0], [248.0, 390.0], [269.0, 394.0], [271.0, 456.0], [267.0, 359.0], [270.0, 463.0], [268.0, 460.0], [259.0, 547.0], [258.0, 501.0], [257.0, 583.0], [256.0, 593.0], [265.0, 521.0], [264.0, 480.0], [263.0, 543.0], [262.0, 387.0], [261.0, 478.0], [286.0, 482.0], [275.0, 328.0], [274.0, 375.0], [273.0, 535.0], [272.0, 560.0], [287.0, 264.0], [285.0, 400.0], [284.0, 334.0], [283.0, 366.0], [282.0, 337.0], [281.0, 421.0], [279.0, 366.0], [278.0, 482.0], [277.0, 391.0], [276.0, 558.0], [302.0, 309.0], [303.0, 265.0], [301.0, 317.0], [300.0, 262.5], [298.0, 298.0], [297.0, 275.0], [296.0, 334.0], [295.0, 295.0], [289.0, 327.0], [288.0, 489.0], [291.0, 342.0], [290.0, 390.0], [294.0, 320.0], [293.0, 420.0], [292.0, 326.0], [318.0, 308.0], [319.0, 269.0], [317.0, 276.0], [316.0, 317.0], [315.0, 270.0], [314.0, 270.0], [313.0, 277.0], [312.0, 304.0], [311.0, 334.0], [307.0, 336.0], [306.0, 307.0], [310.0, 314.0], [309.0, 280.0], [308.0, 332.0], [334.0, 217.0], [335.0, 221.0], [333.0, 215.0], [332.0, 230.0], [331.0, 223.0], [330.0, 232.0], [329.0, 229.0], [328.0, 276.0], [327.0, 263.0], [320.0, 273.0], [323.0, 246.5], [321.0, 275.0], [326.0, 250.0], [325.0, 271.0], [350.0, 204.0], [351.0, 212.0], [349.0, 206.0], [348.0, 200.0], [347.0, 198.0], [346.0, 205.0], [345.0, 194.0], [344.0, 216.0], [343.0, 252.0], [337.0, 214.0], [336.0, 234.0], [339.0, 223.0], [338.0, 251.0], [342.0, 231.0], [341.0, 213.0], [340.0, 201.0], [366.0, 200.0], [367.0, 189.0], [365.0, 163.0], [364.0, 169.0], [363.0, 211.0], [362.0, 214.0], [361.0, 206.0], [360.0, 189.0], [359.0, 221.0], [353.0, 232.0], [352.0, 208.0], [355.0, 185.0], [354.0, 220.0], [358.0, 207.0], [357.0, 211.0], [356.0, 199.0], [382.0, 229.0], [383.0, 211.0], [381.0, 240.0], [380.0, 233.5], [378.0, 240.0], [377.0, 197.0], [376.0, 232.0], [375.0, 208.0], [369.0, 169.0], [368.0, 175.0], [371.0, 183.0], [370.0, 202.0], [374.0, 180.0], [373.0, 173.0], [372.0, 164.0], [384.0, 184.5], [386.0, 168.0], [392.0, 178.0], [391.0, 212.0], [390.0, 179.0], [389.0, 235.0], [388.0, 230.0], [387.0, 193.5], [385.0, 204.0], [1.0, 1582.0]], "isOverall": false, "label": "Create Task-1", "isController": false}, {"data": [[198.56499999999988, 858.5924999999997]], "isOverall": false, "label": "Create Task-1-Aggregated", "isController": false}, {"data": [[2.0, 513.0], [3.0, 543.0], [4.0, 510.0], [6.0, 528.5], [7.0, 471.0], [8.0, 763.0], [9.0, 599.0], [10.0, 591.0], [11.0, 670.0], [12.0, 578.0], [13.0, 592.0], [14.0, 624.0], [15.0, 676.0], [16.0, 636.0], [17.0, 619.0], [18.0, 892.0], [19.0, 691.0], [20.0, 886.0], [21.0, 932.0], [22.0, 1101.0], [25.0, 994.0], [26.0, 774.0], [27.0, 952.0], [29.0, 1169.5], [30.0, 907.0], [33.0, 1037.0], [32.0, 1068.5], [39.0, 1104.8333333333333], [41.0, 1215.0], [40.0, 1008.0], [43.0, 984.0], [42.0, 912.0], [44.0, 972.0], [47.0, 1148.0], [46.0, 1298.5], [49.0, 1022.0], [51.0, 932.0], [52.0, 1090.0], [57.0, 826.0], [56.0, 1152.0], [59.0, 1316.0], [58.0, 1268.0], [61.0, 1096.5], [63.0, 1532.5], [67.0, 1086.0], [66.0, 1254.0], [65.0, 1495.0], [64.0, 1451.0], [71.0, 1124.0], [70.0, 1040.0], [68.0, 1212.0], [75.0, 1402.0], [74.0, 1266.0], [73.0, 1127.0], [72.0, 1644.0], [79.0, 1506.0], [78.0, 1494.0], [77.0, 1011.0], [76.0, 1071.0], [83.0, 1209.0], [82.0, 1350.0], [81.0, 1597.0], [87.0, 1324.0], [86.0, 1638.0], [85.0, 1653.0], [91.0, 1336.0], [90.0, 1575.0], [89.0, 1213.0], [88.0, 1426.0], [94.0, 1507.0], [93.0, 1211.5], [99.0, 1601.0], [98.0, 1527.0], [97.0, 1455.0], [96.0, 1476.0], [103.0, 1912.0], [102.0, 1634.0], [100.0, 1703.0], [106.0, 1674.0], [105.0, 1498.0], [104.0, 1787.0], [111.0, 1958.0], [110.0, 1956.0], [109.0, 1714.0], [108.0, 1646.5], [115.0, 1868.0], [114.0, 1743.0], [113.0, 1785.0], [112.0, 1638.0], [119.0, 1682.0], [118.0, 1588.0], [117.0, 1626.0], [116.0, 1738.0], [123.0, 1684.0], [122.0, 1626.0], [121.0, 1575.0], [120.0, 1701.0], [127.0, 1696.3333333333333], [124.0, 1579.0], [135.0, 1486.0], [134.0, 1493.0], [133.0, 1438.0], [132.0, 1553.0], [131.0, 1689.0], [130.0, 1590.0], [129.0, 1585.0], [128.0, 1527.0], [143.0, 1479.0], [142.0, 1525.0], [141.0, 1540.0], [140.0, 1497.0], [139.0, 1545.0], [138.0, 1542.0], [137.0, 1506.0], [136.0, 1384.0], [151.0, 1410.0], [150.0, 1463.0], [149.0, 1535.0], [148.0, 1584.0], [147.0, 1547.0], [146.0, 1484.0], [144.0, 1465.0], [159.0, 1394.0], [158.0, 2083.0], [157.0, 1309.0], [156.0, 1323.0], [155.0, 1398.0], [154.0, 1444.0], [153.0, 1510.0], [152.0, 1092.0], [167.0, 1269.0], [166.0, 1270.0], [165.0, 1231.0], [164.0, 1628.0], [163.0, 1266.0], [162.0, 1615.0], [161.0, 1110.0], [160.0, 1255.0], [175.0, 1180.0], [174.0, 1090.0], [173.0, 1324.0], [172.0, 1595.0], [171.0, 1097.0], [170.0, 1180.0], [169.0, 1546.0], [168.0, 1637.0], [183.0, 813.0], [182.0, 1086.0], [181.0, 1091.0], [180.0, 1093.0], [179.0, 1057.0], [178.0, 1092.0], [177.0, 1084.0], [176.0, 1257.0], [190.0, 1192.0], [188.0, 1361.0], [187.0, 1135.0], [186.0, 1069.0], [185.0, 1081.0], [184.0, 1137.0], [199.0, 1039.0], [198.0, 1141.0], [197.0, 1043.0], [196.0, 1045.0], [195.0, 1073.0], [194.0, 1152.0], [193.0, 1085.0], [192.0, 1163.5], [207.0, 1005.0], [206.0, 1064.0], [205.0, 1044.0], [204.0, 999.0], [203.0, 1067.0], [202.0, 970.0], [201.0, 1033.0], [200.0, 1172.0], [215.0, 1115.0], [214.0, 896.0], [213.0, 876.0], [212.0, 908.0], [211.0, 1153.0], [210.0, 956.0], [209.0, 899.0], [208.0, 1029.0], [223.0, 1094.0], [222.0, 879.0], [221.0, 945.0], [220.0, 1037.0], [219.0, 902.0], [218.0, 838.0], [217.0, 975.0], [216.0, 1289.0], [231.0, 841.0], [230.0, 863.5], [228.0, 726.0], [227.0, 900.0], [226.0, 881.0], [225.0, 963.0], [224.0, 804.0], [239.0, 859.0], [238.0, 652.0], [237.0, 866.0], [236.0, 707.0], [235.0, 840.0], [234.0, 780.0], [233.0, 772.0], [232.0, 796.0], [246.0, 381.5], [247.0, 447.0], [245.0, 395.0], [244.0, 679.0], [243.0, 464.0], [242.0, 492.0], [241.0, 593.0], [240.0, 656.0], [254.0, 311.3333333333333], [255.0, 524.0], [253.0, 520.0], [252.0, 605.0], [251.0, 539.0], [250.0, 481.0], [249.0, 591.0], [248.0, 486.0], [269.0, 513.0], [271.0, 503.0], [267.0, 370.6666666666667], [270.0, 466.0], [268.0, 496.0], [259.0, 491.0], [258.0, 569.0], [257.0, 486.0], [256.0, 476.0], [265.0, 473.0], [264.0, 504.0], [263.0, 491.0], [262.0, 494.0], [261.0, 535.0], [286.0, 333.0], [275.0, 288.0], [274.0, 453.0], [273.0, 367.0], [272.0, 516.0], [287.0, 491.0], [285.0, 317.0], [284.0, 454.0], [283.0, 499.0], [282.0, 447.0], [281.0, 387.0], [279.0, 487.0], [278.0, 479.0], [277.0, 361.0], [276.0, 458.0], [302.0, 391.0], [303.0, 270.0], [301.0, 281.0], [300.0, 466.0], [298.0, 374.0], [297.0, 253.0], [296.0, 468.0], [295.0, 353.0], [289.0, 381.0], [288.0, 376.0], [291.0, 312.0], [290.0, 342.0], [294.0, 390.0], [293.0, 376.0], [292.0, 398.0], [318.0, 335.0], [319.0, 321.0], [317.0, 391.0], [316.0, 321.0], [315.0, 334.0], [314.0, 288.0], [313.0, 303.0], [312.0, 256.0], [311.0, 359.0], [307.0, 394.0], [306.0, 281.0], [310.0, 315.0], [309.0, 271.0], [308.0, 242.0], [334.0, 262.0], [335.0, 242.0], [333.0, 235.0], [332.0, 288.0], [331.0, 293.0], [330.0, 352.0], [329.0, 358.0], [328.0, 300.0], [327.0, 269.0], [320.0, 311.0], [323.0, 318.5], [321.0, 325.0], [326.0, 261.0], [325.0, 249.0], [350.0, 222.0], [351.0, 200.0], [349.0, 208.0], [348.0, 204.0], [347.0, 205.0], [346.0, 215.0], [345.0, 206.0], [344.0, 248.0], [343.0, 235.0], [337.0, 250.0], [336.0, 211.0], [339.0, 209.0], [338.0, 209.0], [342.0, 246.0], [341.0, 208.0], [340.0, 224.0], [366.0, 218.0], [367.0, 212.0], [365.0, 175.0], [364.0, 227.0], [363.0, 199.0], [362.0, 218.0], [361.0, 204.0], [360.0, 194.0], [359.0, 198.0], [353.0, 210.0], [352.0, 208.0], [355.0, 240.0], [354.0, 217.0], [358.0, 220.0], [357.0, 235.0], [356.0, 234.0], [382.0, 198.0], [383.0, 233.0], [381.0, 185.0], [380.0, 196.5], [378.0, 197.0], [377.0, 179.0], [376.0, 190.0], [375.0, 187.0], [369.0, 174.0], [368.0, 167.0], [371.0, 177.0], [370.0, 181.0], [374.0, 170.0], [373.0, 162.0], [372.0, 193.0], [384.0, 240.0], [386.0, 226.0], [392.0, 218.0], [391.0, 199.0], [390.0, 246.0], [389.0, 232.0], [388.0, 227.0], [387.0, 231.0], [385.0, 224.0], [1.0, 478.0]], "isOverall": false, "label": "Create Task-2", "isController": false}, {"data": [[198.56499999999988, 854.6424999999997]], "isOverall": false, "label": "Create Task-2-Aggregated", "isController": false}, {"data": [[2.0, 11376.0], [3.0, 11368.0], [4.0, 11491.0], [6.0, 11370.5], [7.0, 11353.0], [8.0, 11357.0], [9.0, 11357.0], [10.0, 11345.0], [11.0, 11366.0], [12.0, 11318.0], [13.0, 11323.0], [14.0, 11351.0], [15.0, 11424.0], [16.0, 11336.0], [17.0, 11282.0], [18.0, 11447.0], [19.0, 11304.0], [20.0, 11665.0], [21.0, 11413.0], [22.0, 11530.0], [25.0, 11501.333333333334], [26.0, 11321.0], [27.0, 11638.0], [29.0, 11566.5], [30.0, 11360.0], [33.0, 11731.0], [32.0, 11484.5], [39.0, 11577.666666666668], [41.0, 11657.0], [40.0, 11660.0], [43.0, 11426.0], [42.0, 11690.0], [44.0, 11506.0], [47.0, 11773.0], [46.0, 11647.0], [49.0, 11404.0], [51.0, 11342.5], [52.0, 11391.0], [57.0, 11549.0], [56.0, 11568.5], [59.0, 11660.0], [58.0, 11653.0], [61.0, 11522.5], [63.0, 11216.0], [67.0, 11564.0], [66.0, 11575.0], [65.0, 11628.0], [64.0, 11395.0], [71.0, 11474.0], [70.0, 11505.0], [68.0, 11540.0], [75.0, 11566.0], [74.0, 11496.0], [73.0, 11548.0], [72.0, 11341.0], [79.0, 11546.0], [78.0, 11521.0], [77.0, 11440.0], [76.0, 11439.0], [83.0, 11499.0], [82.0, 11464.0], [81.0, 11352.5], [87.0, 10875.0], [86.0, 10893.0], [85.0, 11113.5], [91.0, 11004.0], [90.0, 10894.0], [89.0, 11368.0], [88.0, 10832.0], [94.0, 11008.0], [93.0, 11114.0], [99.0, 10496.0], [98.0, 10506.0], [97.0, 11203.0], [96.0, 10988.0], [103.0, 10867.0], [102.0, 10287.0], [100.0, 10617.0], [106.0, 10505.0], [105.0, 10182.0], [104.0, 10434.0], [111.0, 10552.0], [110.0, 10230.0], [109.0, 10495.0], [108.0, 10420.0], [115.0, 9949.0], [114.0, 10210.0], [113.0, 10549.0], [112.0, 10329.0], [119.0, 9973.0], [118.0, 10173.0], [117.0, 9925.0], [116.0, 10560.0], [123.0, 9906.0], [122.0, 9991.0], [121.0, 10010.0], [120.0, 9737.0], [127.0, 9779.666666666666], [124.0, 9713.0], [135.0, 9696.0], [134.0, 9868.0], [133.0, 9768.0], [132.0, 10310.0], [131.0, 9640.0], [130.0, 9603.0], [129.0, 9640.0], [128.0, 10146.0], [143.0, 10085.0], [142.0, 9405.0], [141.0, 10030.0], [140.0, 10222.0], [139.0, 9534.0], [138.0, 10031.0], [137.0, 10048.0], [136.0, 9650.0], [151.0, 9151.0], [150.0, 9266.0], [149.0, 9902.0], [148.0, 9803.0], [147.0, 9372.0], [146.0, 10004.0], [144.0, 9845.0], [159.0, 9280.0], [158.0, 9453.0], [157.0, 8992.0], [156.0, 9044.0], [155.0, 9399.0], [154.0, 9350.0], [153.0, 9296.0], [152.0, 9577.0], [167.0, 8496.0], [166.0, 8919.0], [165.0, 8472.0], [164.0, 9164.0], [163.0, 9078.0], [162.0, 9331.0], [161.0, 8766.0], [160.0, 8851.0], [175.0, 8588.0], [174.0, 8306.0], [173.0, 8740.0], [172.0, 8335.0], [171.0, 8299.0], [170.0, 8890.0], [169.0, 8674.0], [168.0, 8424.0], [183.0, 8385.0], [182.0, 8153.0], [181.0, 7851.0], [180.0, 8075.0], [179.0, 7960.0], [178.0, 7907.0], [177.0, 8548.0], [176.0, 7909.0], [190.0, 7896.0], [188.0, 8293.0], [187.0, 7845.0], [186.0, 8101.0], [185.0, 7928.0], [184.0, 7936.0], [199.0, 7956.0], [198.0, 7964.0], [197.0, 7689.0], [196.0, 7817.0], [195.0, 7810.0], [194.0, 8107.0], [193.0, 7908.0], [192.0, 8189.0], [207.0, 8056.0], [206.0, 7925.0], [205.0, 7906.0], [204.0, 7806.0], [203.0, 7707.0], [202.0, 7552.0], [201.0, 7773.0], [200.0, 7597.0], [215.0, 7188.0], [214.0, 7199.0], [213.0, 7155.0], [212.0, 7507.0], [211.0, 7768.0], [210.0, 7876.0], [209.0, 7782.0], [208.0, 7989.0], [223.0, 7408.0], [222.0, 7114.0], [221.0, 7110.0], [220.0, 6915.0], [219.0, 6884.0], [218.0, 6942.0], [217.0, 7138.0], [216.0, 6832.0], [231.0, 6976.0], [230.0, 6941.0], [228.0, 6798.0], [227.0, 7192.0], [226.0, 6793.0], [225.0, 6761.0], [224.0, 7173.0], [239.0, 6030.0], [238.0, 6036.0], [237.0, 6829.0], [236.0, 6683.0], [235.0, 6515.0], [234.0, 6607.0], [233.0, 7087.0], [232.0, 6357.0], [246.0, 3301.5], [247.0, 5698.0], [245.0, 6350.0], [244.0, 6081.0], [243.0, 6416.0], [242.0, 6247.0], [241.0, 6493.0], [240.0, 6383.0], [254.0, 2194.666666666667], [255.0, 5510.0], [253.0, 5630.0], [252.0, 5657.0], [251.0, 5684.0], [250.0, 5787.0], [249.0, 5803.0], [248.0, 5870.0], [269.0, 5211.0], [271.0, 5757.0], [267.0, 3830.6666666666665], [270.0, 5314.0], [268.0, 5231.0], [259.0, 5843.0], [258.0, 5865.0], [257.0, 5867.0], [256.0, 5866.0], [265.0, 5799.0], [264.0, 5792.0], [263.0, 5836.0], [262.0, 5781.0], [261.0, 5611.0], [286.0, 5302.0], [275.0, 2356.0], [274.0, 5175.0], [273.0, 5311.0], [272.0, 5777.0], [287.0, 5171.0], [285.0, 5399.0], [284.0, 5465.0], [283.0, 5523.0], [282.0, 5518.0], [281.0, 5539.0], [279.0, 5548.0], [278.0, 5643.0], [277.0, 5083.0], [276.0, 5708.0], [302.0, 4746.0], [303.0, 4710.0], [301.0, 4817.0], [300.0, 4852.5], [298.0, 4883.0], [297.0, 4898.0], [296.0, 5151.0], [295.0, 4952.0], [289.0, 5065.0], [288.0, 5181.0], [291.0, 4998.0], [290.0, 5063.0], [294.0, 4966.0], [293.0, 5075.0], [292.0, 4998.0], [318.0, 4437.0], [319.0, 4434.0], [317.0, 4506.0], [316.0, 4320.0], [315.0, 4470.0], [314.0, 4335.0], [313.0, 4346.0], [312.0, 4432.0], [311.0, 4391.0], [307.0, 4700.0], [306.0, 4822.0], [310.0, 4494.0], [309.0, 4741.0], [308.0, 4890.0], [334.0, 3813.0], [335.0, 3981.0], [333.0, 3939.0], [332.0, 4153.0], [331.0, 4181.0], [330.0, 4242.0], [329.0, 4234.0], [328.0, 4166.0], [327.0, 4193.0], [320.0, 4215.0], [323.0, 4262.5], [321.0, 4325.0], [326.0, 4349.0], [325.0, 4224.0], [350.0, 3299.0], [351.0, 3333.0], [349.0, 3370.0], [348.0, 3447.0], [347.0, 3433.0], [346.0, 3621.0], [345.0, 3612.0], [344.0, 3644.0], [343.0, 3588.0], [337.0, 3792.0], [336.0, 3791.0], [339.0, 3606.0], [338.0, 3762.0], [342.0, 3500.0], [341.0, 3598.0], [340.0, 3757.0], [366.0, 2693.0], [367.0, 2699.0], [365.0, 2621.0], [364.0, 2688.0], [363.0, 2896.0], [362.0, 2953.0], [361.0, 2862.0], [360.0, 2921.0], [359.0, 2931.0], [353.0, 3098.0], [352.0, 3273.0], [355.0, 3008.0], [354.0, 3220.0], [358.0, 3107.0], [357.0, 3066.0], [356.0, 3178.0], [382.0, 2088.0], [383.0, 1822.0], [381.0, 1925.0], [380.0, 2033.0], [378.0, 2102.0], [377.0, 2031.0], [376.0, 2203.0], [375.0, 2202.0], [369.0, 2454.0], [368.0, 2531.0], [371.0, 2283.0], [370.0, 2502.0], [374.0, 2310.0], [373.0, 2260.0], [372.0, 2390.0], [384.0, 1344.5], [386.0, 1018.0], [392.0, 1033.0], [391.0, 1166.0], [390.0, 1212.0], [389.0, 1238.0], [388.0, 1635.0], [387.0, 1576.0], [385.0, 1758.0], [1.0, 11434.0]], "isOverall": false, "label": "Create Task", "isController": false}, {"data": [[198.56499999999988, 7479.615000000002]], "isOverall": false, "label": "Create Task-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 392.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5333.333333333333, "minX": 1.70192472E12, "maxY": 88826.66666666667, "series": [{"data": [[1.70192472E12, 88826.66666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70192472E12, 5333.333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70192472E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 854.6424999999997, "minX": 1.70192472E12, "maxY": 7479.615000000002, "series": [{"data": [[1.70192472E12, 5766.220000000001]], "isOverall": false, "label": "Create Task-0", "isController": false}, {"data": [[1.70192472E12, 858.5924999999997]], "isOverall": false, "label": "Create Task-1", "isController": false}, {"data": [[1.70192472E12, 854.6424999999997]], "isOverall": false, "label": "Create Task-2", "isController": false}, {"data": [[1.70192472E12, 7479.615000000002]], "isOverall": false, "label": "Create Task", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70192472E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 834.685, "minX": 1.70192472E12, "maxY": 5766.094999999998, "series": [{"data": [[1.70192472E12, 5766.094999999998]], "isOverall": false, "label": "Create Task-0", "isController": false}, {"data": [[1.70192472E12, 835.1299999999995]], "isOverall": false, "label": "Create Task-1", "isController": false}, {"data": [[1.70192472E12, 834.685]], "isOverall": false, "label": "Create Task-2", "isController": false}, {"data": [[1.70192472E12, 5766.094999999998]], "isOverall": false, "label": "Create Task", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70192472E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70192472E12, "maxY": 5753.069999999997, "series": [{"data": [[1.70192472E12, 5753.069999999997]], "isOverall": false, "label": "Create Task-0", "isController": false}, {"data": [[1.70192472E12, 0.0]], "isOverall": false, "label": "Create Task-1", "isController": false}, {"data": [[1.70192472E12, 0.0]], "isOverall": false, "label": "Create Task-2", "isController": false}, {"data": [[1.70192472E12, 5753.069999999997]], "isOverall": false, "label": "Create Task", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70192472E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 128.0, "minX": 1.70192472E12, "maxY": 11778.0, "series": [{"data": [[1.70192472E12, 11778.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70192472E12, 128.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70192472E12, 9358.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70192472E12, 11619.69]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70192472E12, 1694.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70192472E12, 11303.699999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70192472E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 229.5, "minX": 40.0, "maxY": 8704.0, "series": [{"data": [[128.0, 8704.0], [143.0, 4153.0], [142.0, 7537.5], [144.0, 2434.0], [151.0, 5456.0], [153.0, 1689.0], [40.0, 237.0], [165.0, 6666.0], [178.0, 1698.5], [63.0, 1166.0], [84.0, 229.5], [86.0, 6385.5], [123.0, 3030.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 178.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 221.0, "minX": 40.0, "maxY": 6369.5, "series": [{"data": [[128.0, 6369.5], [143.0, 3646.0], [142.0, 5723.0], [144.0, 2414.0], [151.0, 4805.0], [153.0, 1651.0], [40.0, 221.0], [165.0, 5293.0], [178.0, 1681.5], [63.0, 771.0], [84.0, 224.0], [86.0, 4909.0], [123.0, 2656.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 178.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 26.666666666666668, "minX": 1.70192472E12, "maxY": 26.666666666666668, "series": [{"data": [[1.70192472E12, 26.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70192472E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.70192472E12, "maxY": 13.333333333333334, "series": [{"data": [[1.70192472E12, 13.333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70192472E12, 6.666666666666667]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70192472E12, 6.666666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70192472E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.70192472E12, "maxY": 6.666666666666667, "series": [{"data": [[1.70192472E12, 6.666666666666667]], "isOverall": false, "label": "Create Task-0-success", "isController": false}, {"data": [[1.70192472E12, 6.666666666666667]], "isOverall": false, "label": "Create Task-1-success", "isController": false}, {"data": [[1.70192472E12, 6.666666666666667]], "isOverall": false, "label": "Create Task-success", "isController": false}, {"data": [[1.70192472E12, 6.666666666666667]], "isOverall": false, "label": "Create Task-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70192472E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 26.666666666666668, "minX": 1.70192472E12, "maxY": 26.666666666666668, "series": [{"data": [[1.70192472E12, 26.666666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70192472E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

